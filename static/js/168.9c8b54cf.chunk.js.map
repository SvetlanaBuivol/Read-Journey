{"version":3,"file":"static/js/168.9c8b54cf.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/DashboardTitle/DashboardTitle.styled.jsx","components/Dashboard/DashboardTitle/DashboardTitle.jsx","components/Form/FilterForms/FilterForm/FilterForm.jsx","components/Form/FilterForms/FilterInput/FilterInput.styled.jsx","components/Form/FilterForms/FilterInput/FilterInput.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.styled.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.jsx","components/Modal/ModalBackdrop/ModalBackdrop.styled.jsx","components/Modal/ModalBackdrop/ModalBackdrop.jsx","components/PagesTitle/PagesTitle.styled.jsx","components/PagesTitle/PagesTitle.jsx","components/Dashboard/Progress/Progress.styled.jsx","components/Dashboard/Progress/Progress.jsx","components/ReadingBook/ReadingBook.styled.jsx","helpers/books/getBookStatus.js","components/ReadingBook/ReadingBook.jsx","components/Form/FilterForms/FilterStopPage/FilterStopPage.styled.jsx","components/Form/FilterForms/FilterStopPage/FilterStopPage.jsx","components/Dashboard/Details/Details.styled.jsx","components/Dashboard/Details/Diary/Diary.styled.jsx","helpers/books/readingTime.js","helpers/books/calculatePercentage.js","helpers/books/formatDate.js","components/Dashboard/Details/Diary/DiaryEvent/DiaryEvent.styled.jsx","components/Dashboard/Details/Diary/DiaryEvent/DiaryEvent.jsx","helpers/books/readPages.js","components/Dashboard/Details/Diary/Diary.jsx","components/Dashboard/Details/Statistic/ProgressBar/CircularProgressBar.styled.jsx","components/Dashboard/Details/Statistic/ProgressBar/CircularProgressBar.jsx","components/Dashboard/Details/Statistic/Statistic.styled.jsx","components/Dashboard/Details/Statistic/Statistic.jsx","helpers/books/getCurrentPercent.js","helpers/books/getPrevPercent.js","components/Dashboard/Details/Details.jsx","components/Form/FilterForms/FilterStartPage/FilterStartPage.styled.jsx","components/Form/FilterForms/FilterStartPage/FilterStartPage.jsx","components/Modal/ModalEndReading/ModalEndReading.styled.jsx","components/Modal/ModalEndReading/ModalEndReading.jsx","pages/Reading.jsx","redux/books/booksSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { wrapperMixin } from '../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  flex-direction: column;\n  padding: ${props => props.$padding?.mob || '20px'};\n  gap: ${props => props.$gap || '20px'};\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: ${props => props.$padding?.tablet || '32px'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n    width: 353px;\n    padding: 40px 20px 20px;\n  }\n`;\n","import { Wrapper } from './Dashboard.styled';\n\nconst Dashboard = ({ children, $gap, $padding }) => {\n  return (\n    <Wrapper $gap={$gap} $padding={$padding}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { textSize } from 'css/variables';\n\nexport const Title = styled.h2`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  line-height: 1;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n`;\n","import { Title } from './DashboardTitle.styled';\n\nconst DashboardTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default DashboardTitle;\n","import { Form, Formik } from \"formik\";\n\nconst FilterForm = ({onSubmit, children, initialValues}) => {\n    return (\n       <Formik\n      initialValues={initialValues}\n    //   validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <Form >{children}</Form>}\n    </Formik>\n   )\n}\n\nexport default FilterForm;","import { colors } from \"../../../../css/variables\";\nimport styled from \"styled-components\";\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 14px 14px;\n  border-radius: 12px;\n  background-color: ${colors.mediumGrey};\n\n  /* ${props =>\n    props.$error &&\n    `\n    border: 1px solid ${colors.red};\n   `}\n\n  ${props =>\n    props.$valid &&\n    `\n    border: 1px solid ${colors.green};\n   `} */\n\n   label {\n    margin-right: 10px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      width: 87px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 16px;\n  }\n`;\n\nexport const Input = styled.input`\nflex: 1;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  /* width: 100%; */\n\n  &::placeholder {\n    color: ${colors.white};\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;","import { useField } from 'formik';\nimport { Input, InputWrapper } from './FilterInput.styled';\n\nconst FilterInput = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <InputWrapper>\n      <label>{label}</label>\n      <Input {...field} {...props} />\n    </InputWrapper>\n  );\n};\n\nexport default FilterInput;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n    font-size: 10px;\n    margin-left: 14px;\n    margin-bottom: 8px;\n\n    @media screen and (min-width: 768px) {\n        \n    }\n`","import { Title } from \"./FilterTitle.styled\";\n\nconst FilterTitle = ({title}) => {\n    return (\n        <Title>{title}</Title>\n   )\n}\n\nexport default FilterTitle;","import styled from \"styled-components\";\nimport { backdropMixin } from \"../../../css/variables\";\n\nexport const Backdrop = styled.div`\n ${backdropMixin}\n justify-content: center;\n align-items: center;\n`;","import { useEffect } from \"react\";\nimport { Backdrop } from \"./ModalBackdrop.styled\";\n\nconst ModalBackdrop = ({onClose, children}) => {\n    const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n    };\n    \n    const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n    };\n    \n    useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onClose]);\n    \n    return (\n        <Backdrop onClick={handleBackdropClick}>\n          {children}\n        </Backdrop>\n    )\n}\n\nexport default ModalBackdrop","import styled from \"styled-components\";\nimport { textSize } from \"../../css/variables\";\n\nexport const Title = styled.h2`\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.m};\n    line-height: 1;\n    letter-spacing: -0.02em;\n\n    @media screen and (min-width: 768px) {\n        font-size: ${textSize.l};\n        letter-spacing: inherit;\n        line-height: 1.14;\n    }\n`","import { Title } from \"./PagesTitle.styled\";\n\nconst PagesTitle = ({title}) => {\n    return <Title>{title}</Title>\n}\n\nexport default PagesTitle;","import styled from 'styled-components';\nimport { colors, textSize } from '../../../css/variables';\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 310px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 14px;\n  font-size: ${textSize.xxs};\n  color: ${colors.lightGrey};\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 32px;\n  height: 32px;\n\n  @media screen and (min-width: 768px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const ImageBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  background-color: ${colors.mediumGrey};\n  border-radius: 50%;\n  margin: 20px auto 0;\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 100px;\n    margin: 50px auto 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 60px auto 0;\n  }\n`;\n","import DashboardTitle from '../DashboardTitle/DashboardTitle';\nimport { Image, ImageBox, Text, Wrapper } from './Progress.styled';\n\nconst Progress = () => {\n  return (\n    <Wrapper>\n      <DashboardTitle title=\"Progress\" />\n      <Text>\n        Here you will see when and how much you read. To record, click on the\n        red button above.\n      </Text>\n      <ImageBox>\n        <Image src=\"./images/star.png\" alt=\"star\" />\n      </ImageBox>\n    </Wrapper>\n  );\n};\n\nexport default Progress;\n","import { colors, textSize, wrapperMixin } from '../../css/variables';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  flex-direction: column;\n  padding: 40px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 40px 25px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 40px 40px 53px;\n  }\n`;\n\nexport const BookCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 44px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 137px;\n  height: 208px;\n  border-radius: 11px;\n\n  @media screen and (min-width: 768px) {\n    width: 169px;\n    height: 256px;\n     border-radius: 13px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 224px;\n    height: 340px;\n     border-radius: 17px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.xxs};\n  letter-spacing: -0.02em;\n  width: 146px;\n  margin-top: 10px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n    margin-top: 25px;\n    width: 350px;\n  }\n`;\n\nexport const Author = styled.p`\n  font-size: 10px;\n  color: ${colors.lightGrey};\n  letter-spacing: -0.02em;\n  margin-top: 5px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.xxs};\n    margin-top: 4px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 40px;\n  height: 40px;\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 50px;\n    height: 50px;\n    margin-top: 16px;\n  }\n`;\n","export const getBookStatus = book => {\n  const progress = book.progress;\n  let status;\n  let isBookStarted;\n  if (progress) {\n    const lastItem = progress.length > 0 && progress[progress.length - 1];\n    status = lastItem ? lastItem.status : null;\n    isBookStarted =\n      progress.length > 0 && progress[0].finishPage !== undefined\n        ? progress[0].finishPage\n        : false;\n  }\n  return { status, isBookStarted };\n};\n","import {  useSelector } from 'react-redux';\nimport PagesTitle from '../../components/PagesTitle/PagesTitle';\nimport { Author, BookCard, Image, Svg, Title, Wrapper } from './ReadingBook.styled';\nimport { getReadingBook } from '../../redux/books/booksSelectors';\nimport { getBookStatus } from '../../helpers/books/getBookStatus';\n\nconst ReadingBook = () => {\n    const book = useSelector(getReadingBook);\n\n  const bookStatus = getBookStatus(book)\n\n  return (\n    <Wrapper>\n      <PagesTitle title=\"My reading\" />\n      <BookCard>\n        <Image src={book.imageUrl || './images/ownDefaultImage.jpg'} alt={book.title} />\n        <Title>{book.title}</Title>\n        <Author>{book.author}</Author>\n        {bookStatus.status === 'active' ? (\n          <Svg>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-active\"></use>\n          </Svg>\n        ) : (\n          <Svg>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-pause\"></use>\n          </Svg>\n        )}\n      </BookCard>\n    </Wrapper>\n  );\n};\n\nexport default ReadingBook;\n","import { buttonMixin } from \"../../../../css/variables\";\nimport styled from \"styled-components\";\n\n// export const Wrapper = styled.div`\n//     flex: 1;\n//     width: 295px;\n// `\n\nexport const InputWrapper = styled.div`\n    margin-bottom: 20px;\n`\n\nexport const Button = styled.button`\n    ${buttonMixin}\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport {stopReadingBookAsync } from \"../../../../redux/books/booksOperations\";\nimport FilterTitle from \"../FilterTitle/FilterTitle\";\nimport FilterForm from \"../FilterForm/FilterForm\";\nimport { Button, InputWrapper } from \"./FilterStopPage.styled\";\nimport FilterInput from \"../FilterInput/FilterInput\";\nimport { getReadingBook } from \"../../../../redux/books/booksSelectors\";\nimport Notiflix from \"notiflix\";\n\nconst FilterStopPage = ({ id, openModal }) => {\n  const {totalPages} = useSelector(getReadingBook)\n    const dispatch = useDispatch();\n\n  const onSubmit = ({ page }, actions) => {\n    dispatch(stopReadingBookAsync({ page, id })).unwrap().catch((error) => Notiflix.Notify.failure(`${error}`, {position: 'center-center'}));\n    if (+page === totalPages) {\n      openModal()\n    }\n    }\n  return (\n    <div>\n      <FilterTitle title=\"Stop page:\" />\n      <FilterForm onSubmit={onSubmit} initialValues={{ page: '' }}>\n        <InputWrapper>\n          <FilterInput\n            label=\"Page number:\"\n            placeholder=\"0\"\n            type=\"text\"\n            name=\"page\"\n          />\n        </InputWrapper>\n        <Button type=\"submit\">To stop</Button>\n      </FilterForm>\n    </div>\n  );\n}\n\nexport default FilterStopPage","import { colors } from '../../../css/variables';\nimport styled from 'styled-components';\n\nexport const Navigation = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${({ $isActive }) =>\n    $isActive ? `${colors.white}` : `${colors.lightGrey}`};\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../../../css/variables';\n\nexport const List = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 17px;\n  margin-top: 20px;\n  height: 211px;\n  padding: 16px;\n  overflow-y: auto;\n  background-color: ${colors.mediumGrey};\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n    height: 240px;\n    width: 321px;\n    gap: 14px;\n    padding-bottom: 31px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n    height: 373px;\n    width: 313px;\n    gap: 22px;\n    padding: 20px 20px 28px;\n  }\n`;\n","export const readingTime = (endDate, startDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffInMinutes = Math.floor((end - start) / (1000 * 60));\n\n    const hours = Math.floor(diffInMinutes / 60);\n    const minutes = diffInMinutes % 60;\n\n    if (hours > 0 && minutes > 0) {\n      return `${hours} hours ${minutes} minutes`;\n    } else if (hours > 0) {\n      return `${hours} hours`;\n    } else {\n      return `${minutes} minutes`;\n    }\n  };","export const calculatePercentage = (pagesRead, totalPages) => {\n    const percentage = (pagesRead / totalPages) * 100;\n    return percentage.toFixed(1) + '%';\n  };","export const formatDate = dateString => {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear().toString();\n    return `${day}.${month}.${year}`;\n  };","import styled from 'styled-components';\nimport { colors, textSize } from '../../../../../css/variables';\n\nexport const Line = styled.div`\n  position: absolute;\n  top: 16px;\n  width: 2px;\n  left: -18px;\n  height: 100%;\n  background-color: ${colors.darkGrey};\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    left: -21px;\n    height: calc(100% - 8px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 100%;\n  }\n`;\n\nexport const Event = styled.li`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-left: 25px;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 30px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -25px;\n    width: 16px;\n    height: 16px;\n    border: 4px solid ${colors.lightGrey};\n    border-radius: 4px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n      left: -30px;\n    }\n  }\n\n  &:last-of-type::before {\n    border: 4px solid ${colors.white};\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 6px;\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const Container = styled.div`\n  text-align: end;\n`;\n\nexport const Data = styled.p`\n  font-family: 'Gilroy-Bold';\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.xs};\n  }\n`;\n\nexport const Percentage = styled.p`\n  font-size: ${textSize.xxs};\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 28px;\n  }\n`;\n\nexport const Time = styled.p`\n  font-size: 10px;\n  color: ${colors.lightGrey};\n  margin-top: 4px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    margin-top: 8px;\n  }\n`;\n\nexport const Pages = styled.p`\n  color: ${colors.lightGrey};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.xxs};\n  }\n`;\n\nexport const Speed = styled.p`\n  font-size: 9px;\n  color: ${colors.lightGrey};\n  margin-top: 7px;\n  width: 45px;\n  letter-spacing: -0.02em;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 55px;\n    font-size: 11px;\n  }\n`;\n\nexport const GrafficSvg = styled.svg`\n  width: 43px;\n  height: 18px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 59px;\n    height: 25px;\n    margin-top: 18px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 30px;\n  }\n`;\n","import { readingTime } from '../../../../../helpers/books/readingTime';\nimport { calculatePercentage } from '../../../../../helpers/books/calculatePercentage';\nimport { formatDate } from '../../../../../helpers/books/formatDate';\nimport {\n  Box,\n  Container,\n  Data,\n  Event,\n  GrafficSvg,\n  Line,\n  Pages,\n  Percentage,\n  Speed,\n  Time,\n} from './DiaryEvent.styled';\nimport { readPages } from '../../../../../helpers/books/readPages';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteReadingEventAsync } from '../../../../../redux/books/booksOperations';\nimport { getReadingBook } from '../../../../../redux/books/booksSelectors';\nimport Notiflix from 'notiflix';\n\nconst DiaryEvent = ({ event, totalPages }) => {\n  const book = useSelector(getReadingBook);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(\n      deleteReadingEventAsync({ bookId: book._id, readingId: event._id })\n    )\n      .unwrap()\n      .catch(() =>\n        Notiflix.Notify.warning(\n          'Oops! Somethimg went wrong. Please, try again',\n          {\n            position: 'center-center',\n          }\n        )\n      );\n  };\n\n  return event.finishReading ? (\n    <Event>\n      <Line></Line>\n      <div>\n        <Data>{formatDate(event.finishReading)}</Data>\n        <Percentage>\n          {calculatePercentage(event.finishPage - event.startPage, totalPages)}\n        </Percentage>\n        <Time>{readingTime(event.finishReading, event.startReading)}</Time>\n      </div>\n      <Box>\n        <Container>\n          <Pages>{readPages(event.startPage, event.finishPage)}</Pages>\n          <GrafficSvg>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-grafic\"></use>\n          </GrafficSvg>\n          <Speed>{event.speed} pages per hour</Speed>\n        </Container>\n\n        <button onClick={handleDelete}>\n          <svg width={14} height={14}>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-trashGrey\"></use>\n          </svg>\n        </button>\n      </Box>\n    </Event>\n  ) : null;\n};\n\nexport default DiaryEvent;\n","export const readPages = (startPage, endPage) => {\n    const pages = endPage - startPage;\n    return `${pages} pages`;\n  };","import { useSelector } from 'react-redux';\nimport { getReadingBook } from '../../../../redux/books/booksSelectors';\nimport { List } from './Diary.styled';\nimport DiaryEvent from './DiaryEvent/DiaryEvent';\n\nconst Diary = () => {\n  const book = useSelector(getReadingBook);\n\n  const progress = book.progress;\n  const totalPages = book.totalPages;\n\n  return (\n    <List>\n      {progress?.map(event => (\n        <DiaryEvent key={event._id} event={event} totalPages={totalPages} />\n      ))}\n    </List>\n  );\n};\n\nexport default Diary;\n","import styled from 'styled-components';\nimport { colors, textSize } from '../../../../../css/variables';\n\nexport const CircleContainer = styled.div`\n  position: relative;\n  width: 116px;\n  height: 116px;\n\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    height: 138px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 189px;\n    height: 189px;\n  }\n`;\n\nexport const CircleSVG = styled.svg`\n  width: 100%;\n  height: 100%;\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n`;\n\nexport const BackgroundCircle = styled.circle`\n  stroke: ${colors.darkGrey};\n  stroke-width: 11;\n  fill: transparent;\n`;\n\nexport const ProgressCircle = styled.circle`\n  stroke: ${colors.green};\n  stroke-width: 10;\n  fill: transparent;\n  transition: stroke-dashoffset 0.35s;\n  stroke-linecap: round;\n`;\n\nexport const Text = styled.text`\n  fill: ${colors.white};\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  text-anchor: middle;\n  transform: rotate(90deg);\n  transform-origin: 60px 60px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  BackgroundCircle,\n  CircleContainer,\n  CircleSVG,\n  ProgressCircle,\n  Text,\n} from './CircularProgressBar.styled';\n\nconst CircularProgressBar = ({ percent }) => {\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    const radius = 50;\n    const circumference = 2 * Math.PI * radius;\n    const newOffset = circumference - (percent / 100) * circumference;\n    setOffset(newOffset);\n  }, [percent]);\n\n  return (\n    <CircleContainer>\n      <CircleSVG viewBox=\"0 0 120 120\">\n        <BackgroundCircle r={50} cx=\"60\" cy=\"60\" />\n        <ProgressCircle\n          r={50}\n          cx=\"60\"\n          cy=\"60\"\n          strokeDasharray={`${2 * Math.PI * 50} ${2 * Math.PI * 50}`}\n          strokeDashoffset={offset}\n        />\n        <Text x=\"60\" y=\"66\">\n          100%\n        </Text>\n      </CircleSVG>\n    </CircleContainer>\n  );\n};\n\nexport default CircularProgressBar;\n","import styled from 'styled-components';\nimport { colors, innerWrapper, textSize } from '../../../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${innerWrapper}\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    padding: 28px;\n    width: 321px;\n    margin-top: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 313px;\n  }\n`;\n\nexport const Percent = styled.p`\n  font-size: ${textSize.xxs};\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  padding-left: 29px;\n  margin-top: 21px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 14px;\n    height: 14px;\n    background-color: ${colors.green};\n    border-radius: 4px;\n  }\n`;\n\nexport const Pages = styled.p`\n  font-size: 10px;\n  color: ${colors.lightGrey};\n  margin-top: 4px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    margin-top: 8px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport CircularProgressBar from './ProgressBar/CircularProgressBar';\nimport { Box, Pages, Percent, Wrapper } from './Statistic.styled';\nimport { getReadingBook } from '../../../../redux/books/booksSelectors';\nimport { getPrevPercent } from 'helpers/books/getPrevPercent';\nimport { getCurrentPercent } from 'helpers/books/getCurrentPercent';\n\nconst Statistic = () => {\n  const book = useSelector(getReadingBook);\n\n  const readPages = book?.progress[book.progress?.length - 1].finishPage;\n  const totalPages = book?.totalPages;\n\n  const currentPercent = getCurrentPercent(readPages, totalPages);\n\n  const prevPercent = getPrevPercent(book, totalPages);\n\n  return (\n    <Wrapper>\n      {!currentPercent && !prevPercent ? (\n        <div>In progress</div>\n      ) : (\n        <>\n          <CircularProgressBar percent={currentPercent || prevPercent} />\n          <Box>\n            <Percent>{currentPercent || prevPercent}%</Percent>\n            <Pages>{readPages} pages read</Pages>\n          </Box>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Statistic;\n","export const getCurrentPercent = (readPages, totalPages) => {\n    const percentageRead = ((readPages / totalPages) * 100).toFixed(2)\n    const percentage = isNaN(percentageRead) ? false : percentageRead;\n    return percentage\n}","export const getPrevPercent = (book, totalPages) => {\n        let prevPercent = null\n        if (book.progress?.length >= 2) {\n            const readPrevPages = book?.progress[book.progress?.length - 2].finishPage\n            prevPercent = ((readPrevPages / totalPages) * 100).toFixed(2)\n        }\n        return prevPercent\n    }","import { useState } from 'react';\nimport DashboardTitle from '../DashboardTitle/DashboardTitle';\nimport { Box, Navigation, Svg } from './Details.styled';\nimport Diary from './Diary/Diary';\nimport Statistic from './Statistic/Statistic';\n\nconst Details = () => {\n  const [activeButton, setActiveButton] = useState('diary');\n\n  const onStatisticClick = () => {\n    setActiveButton('statistic');\n  };\n\n  const onDiaryClick = () => {\n    setActiveButton('diary');\n  };\n\n  return (\n    <div>\n      <Navigation>\n        <DashboardTitle title=\"Diary\" />\n        <Box>\n          <button onClick={onDiaryClick}>\n            <Svg $isActive={activeButton === 'diary'}>\n              <use xlinkHref=\"./svg/svgSprite.svg#icon-diary\"></use>\n            </Svg>\n          </button>\n          <button onClick={onStatisticClick}>\n            <Svg $isActive={activeButton === 'statistic'}>\n              <use xlinkHref=\"./svg/svgSprite.svg#icon-statistic\"></use>\n            </Svg>\n          </button>\n        </Box>\n      </Navigation>\n\n      {activeButton === 'diary' ? <Diary /> : <Statistic />}\n    </div>\n  );\n};\n\nexport default Details;\n","import { buttonMixin } from \"../../../../css/variables\";\nimport styled from \"styled-components\";\n\n// export const Wrapper = styled.div`\n//     flex: 1;\n//     width: 295px;\n// `\n\nexport const InputWrapper = styled.div`\n    margin-bottom: 20px;\n`\n\nexport const Button = styled.button`\n    ${buttonMixin}\n`","import { useDispatch } from 'react-redux';\nimport FilterForm from '../FilterForm/FilterForm';\nimport FilterInput from '../FilterInput/FilterInput';\nimport FilterTitle from '../FilterTitle/FilterTitle';\nimport { Button, InputWrapper } from './FilterStartPage.styled';\nimport { startReadingBookAsync } from '../../../../redux/books/booksOperations';\nimport Notiflix from 'notiflix';\n\nconst FilterStartPage = ({id}) => {\n   const dispatch = useDispatch();\n\n  const onSubmit = ({ page }, actions) => {\n       dispatch(startReadingBookAsync({  page, id })).unwrap().catch(error => Notiflix.Notify.failure(`${error}`, {position: 'center-center'}));\n\n    }\n  return (\n    <div>\n      <FilterTitle title=\"Start page:\" />\n      <FilterForm onSubmit={onSubmit} initialValues={{ page: '' }}>\n        <InputWrapper>\n          <FilterInput\n            label=\"Page number:\"\n            placeholder=\"0\"\n            type=\"text\"\n            name=\"page\"\n          />\n        </InputWrapper>\n        <Button type=\"submit\">To start</Button>\n      </FilterForm>\n    </div>\n  );\n};\n\nexport default FilterStartPage;\n","import { colors, textSize } from '../../../css/variables';\nimport styled from 'styled-components';\n\nexport const ModalContant = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 89%;\n  max-width: 335px;\n  padding: 60px 47px;\n  border-radius: 12px;\n  border: 1px solid ${colors.lightGrey20};\n  background-color: ${colors.darkGrey};\n\n  @media screen and (min-width: 768px) {\n    width: 342px;\n    max-width: 342px;\n    padding: 50px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Image = styled.img`\n    width: 50px;\n    height: 50px;\n    margin-bottom: 20px;\n\n    @media screen and (min-width: 768px) {\n    width: 68px;\n    height: 70px;\n    margin-bottom: 32px;\n  }\n`\n\nexport const Title = styled.h2`\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.s};\n    letter-spacing: -0.02em;\n    margin-bottom: 10px;\n\n    @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n    margin-bottom: 14px;\n  }\n`\n\nexport const Text = styled.p`\n    font-size: ${textSize.xxs};\n    color: ${colors.lightGrey};\n    letter-spacing: -0.02em;\n\n    span{\n        color: ${colors.white};\n    }\n`","import { CloseButton, Image, ModalContant, Text, Title } from \"./ModalEndReading.styled\";\n\nconst ModalEndReading = ({onClose}) => {\n    return (\n    <ModalContant>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <svg width={28} height={28}>\n          <use xlinkHref=\"./svg/svgSprite.svg#icon-close\"></use>\n        </svg>\n      </CloseButton>\n      <Image src=\"./images/books.png\" alt=\"great\" />\n      <Title>The book is read</Title>\n      <Text>\n        It was an <span>exciting journey</span>, where each page revealed new horizons, and the characters became inseparable friends.\n      </Text>\n    </ModalContant>\n  );\n}\n\nexport default ModalEndReading","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Progress from '../components/Dashboard/Progress/Progress';\nimport ReadingBook from '../components/ReadingBook/ReadingBook';\nimport FilterStopPage from '../components/Form/FilterForms/FilterStopPage/FilterStopPage';\nimport Details from '../components/Dashboard/Details/Details';\nimport FilterStartPage from '../components/Form/FilterForms/FilterStartPage/FilterStartPage';\nimport { getBookByIdAsync } from '../redux/books/booksOperations';\nimport { getReadingBook } from '../redux/books/booksSelectors';\nimport { getBookStatus } from '../helpers/books/getBookStatus';\nimport ModalPortal from '../components/Modal/ModalPortal/ModalPortal';\nimport ModalBackdrop from '../components/Modal/ModalBackdrop/ModalBackdrop';\nimport ModalEndReading from '../components/Modal/ModalEndReading/ModalEndReading';\n\nconst Reading = () => {\n  const book = useSelector(getReadingBook);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const bookId = searchParams.get('bookId');\n\n  const bookStatus = getBookStatus(book);\n\n  const handleOpenModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getBookByIdAsync({ id: bookId }));\n  }, [dispatch, bookId]);\n\n  return (\n    <>\n      <Dashboard\n        $padding={{ mob: '20px 20px 40px', tablet: '32px 32px 84px' }}\n        $gap=\"40px\"\n      >\n        {bookStatus.status === 'active' ? (\n          <FilterStopPage id={bookId} openModal={handleOpenModal} />\n        ) : (\n          <FilterStartPage id={bookId} />\n        )}\n        {bookStatus.status === null || !bookStatus.isBookStarted ? (\n          <Progress />\n        ) : (\n          <Details />\n        )}\n      </Dashboard>\n      <ReadingBook />\n\n      <ModalPortal isOpen={modalIsOpen}>\n        <ModalBackdrop onClose={closeModal}>\n          <ModalEndReading onClose={closeModal}/>\n        </ModalBackdrop>\n        </ModalPortal>\n    </>\n  );\n};\n\nexport default Reading;\n","export const getBooks = state => state.books.books;\n\nexport const getReadingBook = state => state.books.readingBook;\n\nexport const getOwnBooks = state => state.books.ownBooks;\n\nexport const getCurrentPage = state => state.books.currentPage;\n\nexport const getTotalPages = state => state.books.totalPages;\n\nexport const getIsLoading = state => state.books.isLoading;\n\nexport const getIsError = state => state.books.isError;\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","wrapperMixin","props","_props$$padding","$padding","mob","$gap","_props$$padding2","tablet","_ref","children","_jsx","Title","h2","textSize","s","m","title","onSubmit","initialValues","Formik","Form","InputWrapper","colors","mediumGrey","$error","concat","red","$valid","green","lightGrey","Input","input","_templateObject2","white","label","field","useField","_jsxs","Backdrop","backdropMixin","onClose","handleKeyDown","event","key","useEffect","document","addEventListener","removeEventListener","onClick","target","currentTarget","l","Text","p","xxs","Image","img","_templateObject3","ImageBox","_templateObject4","Progress","DashboardTitle","src","alt","BookCard","h3","Author","_templateObject5","Svg","svg","_templateObject6","getBookStatus","book","progress","status","isBookStarted","lastItem","length","undefined","finishPage","ReadingBook","useSelector","getReadingBook","bookStatus","PagesTitle","imageUrl","author","xlinkHref","Button","button","buttonMixin","id","openModal","totalPages","dispatch","useDispatch","FilterTitle","FilterForm","_ref2","actions","page","stopReadingBookAsync","unwrap","catch","error","Notiflix","failure","position","FilterInput","placeholder","type","name","Navigation","Box","$isActive","List","ul","readingTime","endDate","startDate","start","Date","end","diffInMinutes","Math","floor","hours","minutes","calculatePercentage","pagesRead","toFixed","formatDate","dateString","date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","Line","darkGrey","Event","li","Container","Data","xs","Percentage","Time","_templateObject7","Pages","_templateObject8","Speed","_templateObject9","GrafficSvg","_templateObject10","finishReading","startPage","startReading","endPage","speed","handleDelete","deleteReadingEventAsync","bookId","_id","readingId","warning","width","height","readPages","Diary","map","DiaryEvent","CircleContainer","CircleSVG","BackgroundCircle","circle","ProgressCircle","text","percent","offset","setOffset","useState","circumference","PI","viewBox","r","cx","cy","strokeDasharray","strokeDashoffset","x","y","innerWrapper","Percent","Statistic","_book$progress","currentPercent","getCurrentPercent","percentageRead","isNaN","prevPercent","getPrevPercent","_book$progress2","_Fragment","CircularProgressBar","Details","activeButton","setActiveButton","onDiaryClick","onStatisticClick","startReadingBookAsync","ModalContant","lightGrey20","CloseButton","Reading","modalIsOpen","setModalIsOpen","location","useLocation","URLSearchParams","search","get","closeModal","getBookByIdAsync","Dashboard","FilterStopPage","handleOpenModal","FilterStartPage","ModalPortal","isOpen","ModalBackdrop","ModalEndReading","getBooks","state","books","readingBook","getOwnBooks","ownBooks","getCurrentPage","currentPage","getTotalPages","getIsLoading","isLoading"],"sourceRoot":""}