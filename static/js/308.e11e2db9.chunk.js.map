{"version":3,"file":"static/js/308.e11e2db9.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/DashboardTitle/DashboardTitle.styled.jsx","components/Dashboard/DashboardTitle/DashboardTitle.jsx","components/Form/FilterForms/FilterForm/FilterForm.jsx","components/Form/FilterForms/FilterInput/FilterInput.styled.jsx","components/Form/FilterForms/FilterInput/FilterInput.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.styled.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.jsx","components/PagesTitle/PagesTitle.styled.jsx","components/PagesTitle/PagesTitle.jsx","components/Dashboard/RecommendedBooks/BookCard/BookCard.styled.jsx","components/Dashboard/RecommendedBooks/BookCard/BookCard.jsx","components/Dashboard/RecommendedBooks/BooksList/BooksList.styled.jsx","components/Dashboard/RecommendedBooks/BooksList/BooksList.jsx","components/Dashboard/RecommendedBooks/RecommendedBooks.styled.jsx","components/Dashboard/RecommendedBooks/RecommendedBooks.jsx","components/Form/FilterForms/FilterMyLibrary/FilterMyLibrary.styled.jsx","components/Form/FilterForms/FilterMyLibrary/FilterMyLibrary.jsx","components/MyLibrary/MyLibraryBookCard/MyLibraryBookCard.styled.jsx","components/MyLibrary/MyLibraryBookCard/MyLibraryBookCard.jsx","components/MyLibrary/MyLibraryList/MyLibraryList.styled.jsx","components/MyLibrary/MyLibrarySelect/MyLibrarySelect.styled.jsx","components/MyLibrary/MyLibrarySelect/MyLibrarySelect.jsx","components/MyLibrary/MyLibraryList/MyLibraryList.jsx","pages/Library.jsx","redux/books/booksSelectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { wrapperMixin } from \"../../css/variables\";\n\nexport const Wrapper = styled.div`\n    ${wrapperMixin}\n    flex-direction: column;\n    padding: 20px;\n    gap: ${props => props.$gap || '20px'};\n\n    @media screen and (min-width: 768px) {\n        flex-direction: row;\n        padding: 32px;\n    }\n\n    @media screen and (min-width: 1440px) {\n        flex-direction: column;\n        width: 353px;\n        padding: 40px 20px 20px;\n    }\n`","import { Wrapper } from \"./Dashboard.styled\";\n\nconst Dashboard = ({children, $gap}) => {\n    return (\n        <Wrapper $gap={$gap}>\n            {children}\n       </Wrapper>\n   )\n}\n\nexport default Dashboard;","import { textSize } from \"css/variables\";\nimport styled from \"styled-components\";\n\nexport const Title = styled.h2`\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.s};\n    line-height: 1;\n    letter-spacing: -0.02em;\n\n    @media screen and (min-width: 768px) {\n        font-size: ${textSize.m};\n    }\n`","import { Title } from \"./DashboardTitle.styled\";\n\nconst DashboardTitle = ({title}) => {\n    return <Title>{title}</Title>\n}\n\nexport default DashboardTitle;","import { Form, Formik } from \"formik\";\n\nconst FilterForm = ({onSubmit, children, initialValues}) => {\n    return (\n       <Formik\n      initialValues={initialValues}\n    //   validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <Form >{children}</Form>}\n    </Formik>\n   )\n}\n\nexport default FilterForm;","import { colors } from \"../../../../css/variables\";\nimport styled from \"styled-components\";\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 14px 14px;\n  border-radius: 12px;\n  background-color: ${colors.mediumGrey};\n\n  /* ${props =>\n    props.$error &&\n    `\n    border: 1px solid ${colors.red};\n   `}\n\n  ${props =>\n    props.$valid &&\n    `\n    border: 1px solid ${colors.green};\n   `} */\n\n   label {\n    margin-right: 10px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 16px;\n  }\n`;\n\nexport const Input = styled.input`\nflex: 1;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  /* width: 100%; */\n\n  &::placeholder {\n    color: ${colors.white};\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;","import { useField } from 'formik';\nimport { Input, InputWrapper } from './FilterInput.styled';\n\nconst FilterInput = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <InputWrapper>\n      <label>{label}</label>\n      <Input {...field} {...props} />\n    </InputWrapper>\n  );\n};\n\nexport default FilterInput;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n    font-size: 10px;\n    margin-left: 14px;\n    margin-bottom: 8px;\n\n    @media screen and (min-width: 768px) {\n        \n    }\n`","import { Title } from \"./FilterTitle.styled\";\n\nconst FilterTitle = ({title}) => {\n    return (\n        <Title>{title}</Title>\n   )\n}\n\nexport default FilterTitle;","import styled from \"styled-components\";\nimport { textSize } from \"../../css/variables\";\n\nexport const Title = styled.h2`\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.m};\n    line-height: 1;\n    letter-spacing: -0.02em;\n\n    @media screen and (min-width: 768px) {\n        font-size: ${textSize.l};\n        letter-spacing: inherit;\n        line-height: 1.14;\n    }\n`","import { Title } from \"./PagesTitle.styled\";\n\nconst PagesTitle = ({title}) => {\n    return <Title>{title}</Title>\n}\n\nexport default PagesTitle;","import styled from 'styled-components';\nimport { colors } from '../../../../css/variables';\n\nexport const Card = styled.li`\n  width: 71px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  img {\n    border-radius: 8px;\n    height: 107px;\n    margin-bottom: 8px;\n  }\n\n  h3 {\n    font-family: 'Gilroy-Bold';\n    font-size: 10px;\n    letter-spacing: -0.02em;\n    margin-bottom: 2px;\n  }\n\n  p {\n    font-size: 10px;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n  }\n`;\n","import { Card } from \"./BookCard.styled\"\n\nconst BookCard = ({imageUrl, title, author}) => {\n    return (\n        <Card>\n            <img src={imageUrl} alt={author} />\n            <h3>{title}</h3>\n            <p>{author}</p>\n        </Card>\n    )\n}\n\nexport default BookCard","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    gap: 20px;\n    margin-top: 14px;\n    margin-bottom: 11px;\n\n    @media screen and (min-width: 768px) {\n        margin-top: 20px;\n        margin-bottom: 14px;\n    }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { getBooks } from '../../../../redux/books/booksSelectors';\nimport { useEffect } from 'react';\nimport { recommendedBooksAsync } from '../../../../redux/books/booksOperations';\nimport BookCard from '../BookCard/BookCard';\nimport { List } from './BooksList.styled';\n\nconst BooksList = () => {\n  const books = useSelector(getBooks);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(recommendedBooksAsync({ limit: 3 }));\n  }, [dispatch]);\n\n  return (\n    <List>\n      {books.length ? (\n        books.map(book => (\n          <BookCard\n            key={book._id}\n            title={book.title}\n            imageUrl={book.imageUrl}\n            author={book.author}\n          />\n        ))\n      ) : (\n        <p>Not found</p>\n      )}\n    </List>\n  );\n};\n\nexport default BooksList;\n","import styled from \"styled-components\";\nimport { colors, innerWrapper, textSize } from \"../../../css/variables\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n    ${innerWrapper}\n    padding: 26px 20px;\n`\n\nexport const LinkWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n`\n\nexport const StyledLink = styled(Link)`\n    font-size: ${textSize.xxs};\n    color: ${colors.lightGrey};\n    letter-spacing: -0.02em;\n`","import { Link } from 'react-router-dom';\nimport DashboardTitle from '../DashboardTitle/DashboardTitle';\nimport BooksList from './BooksList/BooksList';\nimport { LinkWrapper, StyledLink, Wrapper } from './RecommendedBooks.styled';\n\nconst RecommendedBooks = () => {\n  return (\n    <Wrapper>\n      <DashboardTitle title=\"Recommended books\" />\n      <BooksList />\n      <LinkWrapper>\n        <StyledLink to={'/recommended'}>Home</StyledLink>\n        <Link to={'/library'}>\n          <svg width={24} height={24}>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-to\"></use>\n          </svg>\n        </Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n\nexport default RecommendedBooks;\n","import styled from 'styled-components';\nimport { buttonMixin } from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    margin-bottom: 38px;\n  }\n`;\n\nexport const Button = styled.button`\n  ${buttonMixin}\n`;\n","import { useDispatch } from 'react-redux';\nimport FilterForm from '../FilterForm/FilterForm';\nimport FilterInput from '../FilterInput/FilterInput';\nimport FilterTitle from '../FilterTitle/FilterTitle';\nimport { Button, InputWrapper } from './FilterMyLibrary.styled';\nimport { addBookAsync } from '../../../../redux/books/booksOperations';\n\nconst FilterMyLibrary = () => {\n  const dispatch = useDispatch()\n\n  const onSubmit = ({title, author, pages}, actions) => {\n    dispatch(addBookAsync({\n      title,\n      author,\n      totalPages: pages,\n      }))\n        // console.log(\"onSubmit  values\", values)\n        actions.resetForm();\n    }\n  return (\n    <div>\n      <FilterTitle title=\"Create your library:\" />\n      <FilterForm onSubmit={onSubmit} initialValues={{ title: '', author: '', pages: '' }}>\n        <InputWrapper>\n          <FilterInput\n            label=\"Book title:\"\n            placeholder=\"Enter text\"\n            type=\"text\"\n            name=\"title\"\n          />\n          <FilterInput\n            label=\"The author:\"\n            placeholder=\"Enter text\"\n            type=\"text\"\n            name=\"author\"\n          />\n          <FilterInput\n            label=\"Number of pages:\"\n            placeholder=\"Enter text\"\n            type=\"number\"\n            name=\"pages\"\n          />\n        </InputWrapper>\n        <Button type=\"submit\">Add book</Button>\n      </FilterForm>\n    </div>\n  );\n};\n\nexport default FilterMyLibrary;\n","import styled from \"styled-components\";\nimport { colors, textSize } from \"../../../css/variables\";\n\nexport const Card = styled.div`\n    width: 137px;\n    list-style: none;\n`\n\nexport const Image = styled.img`\n    height: 208px;\n    border-radius: 10px;\n    margin-bottom: 8px;\n`\n\nexport const BookInfoBox = styled.div`\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const BookInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n    width: 95px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    h3 {\n        font-family: 'Gilroy-Bold';\n        font-size: ${textSize.xxs};\n        letter-spacing: -0.02em;\n    }\n\n    p {\n        font-size: 10px;\n        letter-spacing: -0.02em;\n        color: ${colors.lightGrey};\n    }\n`","// import defaultImage from './images/ownDefaultImage.jpg'\n\nimport { useDispatch } from \"react-redux\"\nimport { BookInfo, BookInfoBox, Card, Image } from \"./MyLibraryBookCard.styled\"\nimport { deleteOwnBookAsync } from \"../../../redux/books/booksOperations\"\n\nconst MyLibraryBookCard = ({ image, title, author, id }) => {\n    const dispatch = useDispatch()\n\n    const handleDeleteBook = () => {\n        dispatch(deleteOwnBookAsync(id))\n    }\n    return (\n        <Card>\n            <Image src={image ? image : './images/ownDefaultImage.jpg'} alt={title} />\n            <BookInfoBox>\n                <BookInfo>\n                    <h3>{title}</h3>\n                    <p>{author}</p>\n                </BookInfo>\n                <button onClick={handleDeleteBook}>\n                    <svg width={28} height={28}><use xlinkHref=\"./svg/svgSprite.svg#icon-trash\"></use></svg>\n                </button>\n            </BookInfoBox>\n        </Card>\n    )\n}\n\nexport default MyLibraryBookCard","import { wrapperMixin } from \"../../../css/variables\";\nimport styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  flex-direction: column;\n  padding: 40px 20px 65px;\n  \n  @media screen and (min-width: 768px) {\n    padding: 40px 40px 170px;\n  }\n  \n  @media screen and (min-width: 1440px) {\n    padding: 40px 40px 28px;\n  } \n`\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nexport const BooksList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 21px;\n  margin-top: 14px;\n\n   @media screen and (min-width: 768px) {\n    gap: 27px 25px;\n  }\n`\n\n","import styled from 'styled-components';\nimport { colors } from '../../../css/variables';\n\nexport const Box = styled.select`\n  width: 120px;\n  height: 40px;\n  border-radius: 12px;\n  border: 1px solid ${colors.borderGrey};\n  padding: 12px 14px;\n`;\n\nexport const Option = styled.option`\n  font-size: 12px;\n  background-color: ${colors.mediumGrey};\n  color: ${colors.lightGrey};\n\n  &:checked {\n    color: ${colors.white};\n  }\n  &:focus-within {\n    background-color: red !important;\n  }\n`;\n\nexport const customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    width: 120,\n    height: 40,\n    border: state.isFocused ? '1px solid #3E3E3E' : '1px solid #3E3E3E',\n    borderRadius: 12,\n    cursor: 'pointer',\n    backgroundColor: 'transparent',\n    color: '#F9F9F9',\n    boxShadow: state.isFocused ? 'none' : provided.boxShadow,\n    '@media screen and (min-width:768px)': {\n      width: 153,\n      height: 46,\n      fontSize: 14,\n    },\n  }),\n  indicatorSeparator: (provided, state) => ({\n    ...provided,\n    display: 'none',\n  }),\n  menu: (provided, state) => ({\n    ...provided,\n    width: 120,\n    borderRadius: 12,\n    backgroundColor: '#262626',\n    '@media screen and (min-width:768px)': {\n      width: 153,\n      fontSize: 14,\n    },\n  }),\n  singleValue: (provided, state) => ({\n    ...provided,\n    color: '#F9F9F9',\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isSelected ? '#262626' : '#262626',\n    color: state.isSelected ? '#F9F9F9' : '#686868',\n  }),\n};\n","import { useState } from 'react';\nimport Select from 'react-select'\nimport { customStyles } from './MyLibrarySelect.styled';\n\nconst MyLibrarySelect = () => {\n    const [selectedOption, setSelectedOption] = useState('All books');\n\n    const options = [\n        { value: 'all', label: 'All books' },\n        { value: 'unread', label: 'Unread' },\n        { value: 'in-progress', label: 'In progress' },\n        {value: 'done', label: 'Done'},\n    ]\n\n  const handleChange = selectedOption => {\n      setSelectedOption(selectedOption);\n  };\n  return (\n    <div>\n          <Select\n              value={selectedOption}\n              onChange={handleChange}\n              options={options}\n              placeholder={selectedOption}\n              styles={customStyles}\n          />\n    </div>\n  );\n};\n\nexport default MyLibrarySelect;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOwnBooksAsync } from '../../../redux/books/booksOperations';\nimport PagesTitle from '../../../components/PagesTitle/PagesTitle';\nimport { getOwnBooks } from '../../../redux/books/booksSelectors';\nimport MyLibraryBookCard from '../MyLibraryBookCard/MyLibraryBookCard';\nimport { BooksList, Box, Wrapper } from './MyLibraryList.styled';\nimport MyLibrarySelect from '../MyLibrarySelect/MyLibrarySelect';\n\nconst MyLibraryList = () => {\n  const books = useSelector(getOwnBooks);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOwnBooksAsync());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Box>\n      <PagesTitle title=\"My library\" />\n        <MyLibrarySelect />\n        </Box>\n      {books.length ? (\n        <BooksList>\n          {books.map(book => (\n            <MyLibraryBookCard\n              key={book._id}\n              image={book.imageUrl}\n              title={book.title}\n              author={book.author}\n              id={book._id}\n            />\n          ))}\n        </BooksList>\n      ) : (\n        <p>Not found</p>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MyLibraryList;\n","import RecommendedBooks from \"components/Dashboard/RecommendedBooks/RecommendedBooks\";\nimport Dashboard from \"../components/Dashboard/Dashboard\";\nimport FilterMyLibrary from \"../components/Form/FilterForms/FilterMyLibrary/FilterMyLibrary\";\nimport MyLibraryList from \"../components/MyLibrary/MyLibraryList/MyLibraryList\";\n\nconst Library = () => {\n    return (\n        <>\n            <Dashboard>\n                <FilterMyLibrary />\n                <RecommendedBooks/>\n            </Dashboard>\n            <MyLibraryList/>\n        </>\n    )\n}\n\nexport default Library;","export const getBooks = state => state.books.books;\n\nexport const getOwnBooks = state => state.books.ownBooks;\n\nexport const getCurrentPage = state => state.books.currentPage;\n\nexport const getTotalPages = state => state.books.totalPages;"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","wrapperMixin","props","$gap","_ref","children","_jsx","Title","h2","textSize","s","m","title","onSubmit","initialValues","Formik","Form","InputWrapper","colors","mediumGrey","$error","concat","red","$valid","green","lightGrey","Input","input","_templateObject2","white","label","field","useField","_jsxs","l","Card","li","imageUrl","author","src","alt","List","ul","BooksList","books","useSelector","getBooks","dispatch","useDispatch","useEffect","recommendedBooksAsync","limit","length","map","book","BookCard","_id","innerWrapper","LinkWrapper","StyledLink","Link","_templateObject3","xxs","RecommendedBooks","DashboardTitle","to","width","height","xlinkHref","Button","button","buttonMixin","FilterMyLibrary","FilterTitle","FilterForm","actions","pages","addBookAsync","totalPages","resetForm","FilterInput","placeholder","type","name","Image","img","BookInfoBox","BookInfo","_templateObject4","image","id","onClick","handleDeleteBook","deleteOwnBookAsync","Box","select","borderGrey","option","customStyles","control","provided","state","border","isFocused","borderRadius","cursor","backgroundColor","color","boxShadow","fontSize","indicatorSeparator","display","menu","singleValue","isSelected","MyLibrarySelect","selectedOption","setSelectedOption","useState","Select","value","onChange","options","styles","MyLibraryList","getOwnBooks","getOwnBooksAsync","PagesTitle","MyLibraryBookCard","Library","_Fragment","Dashboard","ownBooks","getCurrentPage","currentPage","getTotalPages"],"sourceRoot":""}