{"version":3,"file":"static/js/168.3a0cfc7c.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/DashboardTitle/DashboardTitle.styled.jsx","components/Dashboard/DashboardTitle/DashboardTitle.jsx","components/Form/FilterForms/FilterForm/FilterForm.jsx","components/Form/FilterForms/FilterInput/FilterInput.styled.jsx","components/Form/FilterForms/FilterInput/FilterInput.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.styled.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.jsx","components/Modal/ModalBackdrop/ModalBackdrop.styled.jsx","components/Modal/ModalBackdrop/ModalBackdrop.jsx","components/PagesTitle/PagesTitle.styled.jsx","components/PagesTitle/PagesTitle.jsx","components/Dashboard/Progress/Progress.styled.jsx","components/Dashboard/Progress/Progress.jsx","components/ReadingBook/ReadingBook.styled.jsx","helpers/books/getBookStatus.js","components/ReadingBook/ReadingBook.jsx","components/Form/FilterForms/FilterStopPage/FilterStopPage.styled.jsx","components/Form/FilterForms/FilterStopPage/FilterStopPage.jsx","components/Dashboard/Details/Details.styled.jsx","components/Dashboard/Details/Diary/Diary.styled.jsx","helpers/books/readingTime.js","helpers/books/calculatePercentage.js","helpers/books/formatDate.js","components/Dashboard/Details/Diary/DiaryEvent/DiaryEvent.styled.jsx","components/Dashboard/Details/Diary/DiaryEvent/DiaryEvent.jsx","helpers/books/readPages.js","components/Dashboard/Details/Diary/Diary.jsx","components/Dashboard/Details/Statistic/ProgressBar/CircularProgressBar.styled.jsx","components/Dashboard/Details/Statistic/ProgressBar/CircularProgressBar.jsx","components/Dashboard/Details/Statistic/Statistic.styled.jsx","components/Dashboard/Details/Statistic/Statistic.jsx","helpers/books/getCurrentPercent.js","helpers/books/getPrevPercent.js","components/Dashboard/Details/Details.jsx","components/Form/FilterForms/FilterStartPage/FilterStartPage.styled.jsx","components/Form/FilterForms/FilterStartPage/FilterStartPage.jsx","components/Modal/ModalEndReading/ModalEndReading.styled.jsx","components/Modal/ModalEndReading/ModalEndReading.jsx","pages/Reading.jsx","redux/books/booksSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { wrapperMixin } from '../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  flex-direction: column;\n  padding: ${props => props.$padding?.mob || '20px'};\n  gap: ${props => props.$gap || '20px'};\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: ${props => props.$padding?.tablet || '32px'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n    width: 353px;\n    padding: 40px 20px 20px;\n  }\n`;\n","import { Wrapper } from './Dashboard.styled';\n\nconst Dashboard = ({ children, $gap, $padding }) => {\n  return (\n    <Wrapper $gap={$gap} $padding={$padding}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { textSize } from 'css/variables';\n\nexport const Title = styled.h2`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  line-height: 1;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n`;\n","import { Title } from './DashboardTitle.styled';\n\nconst DashboardTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default DashboardTitle;\n","import { Form, Formik } from 'formik';\n\nconst FilterForm = ({ onSubmit, children, initialValues }) => {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      {() => <Form>{children}</Form>}\n    </Formik>\n  );\n};\n\nexport default FilterForm;\n","import styled from 'styled-components';\nimport { colors } from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 14px 14px;\n  border-radius: 12px;\n  background-color: ${colors.mediumGrey};\n\n  label {\n    margin-right: 10px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      width: 87px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 16px;\n  }\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n\n  &::placeholder {\n    color: ${colors.white};\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n","import { useField } from 'formik';\nimport { Input, InputWrapper } from './FilterInput.styled';\n\nconst FilterInput = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <InputWrapper>\n      <label>{label}</label>\n      <Input {...field} {...props} />\n    </InputWrapper>\n  );\n};\n\nexport default FilterInput;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 10px;\n  margin-left: 14px;\n  margin-bottom: 8px;\n`;\n","import { Title } from './FilterTitle.styled';\n\nconst FilterTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default FilterTitle;\n","import styled from 'styled-components';\nimport { backdropMixin } from '../../../css/variables';\n\nexport const Backdrop = styled.div`\n  ${backdropMixin}\n  justify-content: center;\n  align-items: center;\n`;\n","import { useEffect } from 'react';\nimport { Backdrop } from './ModalBackdrop.styled';\n\nconst ModalBackdrop = ({ onClose, children }) => {\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onClose]);\n\n  return <Backdrop onClick={handleBackdropClick}>{children}</Backdrop>;\n};\n\nexport default ModalBackdrop;\n","import styled from 'styled-components';\nimport { textSize } from '../../css/variables';\n\nexport const Title = styled.h2`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.m};\n  line-height: 1;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.l};\n    letter-spacing: inherit;\n    line-height: 1.14;\n  }\n`;\n","import { Title } from './PagesTitle.styled';\n\nconst PagesTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default PagesTitle;\n","import styled from 'styled-components';\nimport { colors, textSize } from '../../../css/variables';\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 310px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 14px;\n  font-size: ${textSize.xxs};\n  color: ${colors.lightGrey};\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 32px;\n  height: 32px;\n\n  @media screen and (min-width: 768px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const ImageBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  background-color: ${colors.mediumGrey};\n  border-radius: 50%;\n  margin: 20px auto 0;\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 100px;\n    margin: 50px auto 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 60px auto 0;\n  }\n`;\n","import DashboardTitle from '../DashboardTitle/DashboardTitle';\nimport { Image, ImageBox, Text, Wrapper } from './Progress.styled';\n\nconst Progress = () => {\n  return (\n    <Wrapper>\n      <DashboardTitle title=\"Progress\" />\n      <Text>\n        Here you will see when and how much you read. To record, click on the\n        red button above.\n      </Text>\n      <ImageBox>\n        <Image src=\"./images/star.png\" alt=\"star\" />\n      </ImageBox>\n    </Wrapper>\n  );\n};\n\nexport default Progress;\n","import styled from 'styled-components';\nimport { colors, textSize, wrapperMixin } from '../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  flex-direction: column;\n  padding: 40px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 40px 25px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 40px 40px 53px;\n  }\n`;\n\nexport const BookCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 44px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 137px;\n  height: 208px;\n  border-radius: 11px;\n\n  @media screen and (min-width: 768px) {\n    width: 169px;\n    height: 256px;\n    border-radius: 13px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 224px;\n    height: 340px;\n    border-radius: 17px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.xxs};\n  letter-spacing: -0.02em;\n  width: 146px;\n  margin-top: 10px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n    margin-top: 25px;\n    width: 350px;\n  }\n`;\n\nexport const Author = styled.p`\n  font-size: 10px;\n  color: ${colors.lightGrey};\n  letter-spacing: -0.02em;\n  margin-top: 5px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.xxs};\n    margin-top: 4px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 40px;\n  height: 40px;\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 50px;\n    height: 50px;\n    margin-top: 16px;\n  }\n`;\n","export const getBookStatus = book => {\n  const progress = book.progress;\n  let status;\n  let isBookStarted;\n  if (progress) {\n    const lastItem = progress.length > 0 && progress[progress.length - 1];\n    status = lastItem ? lastItem.status : null;\n    isBookStarted =\n      progress.length > 0 && progress[0].finishPage !== undefined\n        ? progress[0].finishPage\n        : false;\n  }\n  return { status, isBookStarted };\n};\n","import { useSelector } from 'react-redux';\nimport PagesTitle from '../../components/PagesTitle/PagesTitle';\nimport {\n  Author,\n  BookCard,\n  Image,\n  Svg,\n  Title,\n  Wrapper,\n} from './ReadingBook.styled';\nimport { getReadingBook } from '../../redux/books/booksSelectors';\nimport { getBookStatus } from '../../helpers/books/getBookStatus';\n\nconst ReadingBook = () => {\n  const book = useSelector(getReadingBook);\n\n  const bookStatus = getBookStatus(book);\n\n  return (\n    <Wrapper>\n      <PagesTitle title=\"My reading\" />\n      <BookCard>\n        <Image\n          src={book.imageUrl || './images/ownDefaultImage.jpg'}\n          alt={book.title}\n        />\n        <Title>{book.title}</Title>\n        <Author>{book.author}</Author>\n        {bookStatus.status === 'active' ? (\n          <Svg>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-active\"></use>\n          </Svg>\n        ) : (\n          <Svg>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-pause\"></use>\n          </Svg>\n        )}\n      </BookCard>\n    </Wrapper>\n  );\n};\n\nexport default ReadingBook;\n","import styled from 'styled-components';\nimport { buttonMixin } from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  ${buttonMixin}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { stopReadingBookAsync } from '../../../../redux/books/booksOperations';\nimport FilterTitle from '../FilterTitle/FilterTitle';\nimport FilterForm from '../FilterForm/FilterForm';\nimport { Button, InputWrapper } from './FilterStopPage.styled';\nimport FilterInput from '../FilterInput/FilterInput';\nimport { getReadingBook } from '../../../../redux/books/booksSelectors';\n\nconst FilterStopPage = ({ id, openModal }) => {\n  const { totalPages } = useSelector(getReadingBook);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ page }) => {\n    dispatch(stopReadingBookAsync({ page, id }))\n      .unwrap()\n      .catch(error =>\n        Notiflix.Notify.failure(`${error}`, { position: 'center-center' })\n      );\n    if (+page === totalPages) {\n      openModal();\n    }\n  };\n  return (\n    <div>\n      <FilterTitle title=\"Stop page:\" />\n      <FilterForm onSubmit={onSubmit} initialValues={{ page: '' }}>\n        <InputWrapper>\n          <FilterInput\n            label=\"Page number:\"\n            placeholder=\"0\"\n            type=\"text\"\n            name=\"page\"\n          />\n        </InputWrapper>\n        <Button type=\"submit\">To stop</Button>\n      </FilterForm>\n    </div>\n  );\n};\n\nexport default FilterStopPage;\n","import styled from 'styled-components';\nimport { colors } from '../../../css/variables';\n\nexport const Navigation = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${({ $isActive }) =>\n    $isActive ? `${colors.white}` : `${colors.lightGrey}`};\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../../../css/variables';\n\nexport const List = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 17px;\n  margin-top: 20px;\n  height: 211px;\n  padding: 16px;\n  overflow-y: auto;\n  background-color: ${colors.mediumGrey};\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n    height: 240px;\n    width: 321px;\n    gap: 14px;\n    padding-bottom: 31px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n    height: 373px;\n    width: 313px;\n    gap: 22px;\n    padding: 20px 20px 28px;\n  }\n`;\n","export const readingTime = (endDate, startDate) => {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  const diffInMinutes = Math.floor((end - start) / (1000 * 60));\n\n  const hours = Math.floor(diffInMinutes / 60);\n  const minutes = diffInMinutes % 60;\n\n  if (hours > 0 && minutes > 0) {\n    return `${hours} hours ${minutes} minutes`;\n  } else if (hours > 0) {\n    return `${hours} hours`;\n  } else {\n    return `${minutes} minutes`;\n  }\n};\n","export const calculatePercentage = (pagesRead, totalPages) => {\n  const percentage = (pagesRead / totalPages) * 100;\n  return percentage.toFixed(1) + '%';\n};\n","export const formatDate = dateString => {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear().toString();\n  return `${day}.${month}.${year}`;\n};\n","import styled from 'styled-components';\nimport { colors, textSize } from '../../../../../css/variables';\n\nexport const Line = styled.div`\n  position: absolute;\n  top: 16px;\n  width: 2px;\n  left: -18px;\n  height: 100%;\n  background-color: ${colors.darkGrey};\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    left: -21px;\n    height: calc(100% - 8px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 100%;\n  }\n`;\n\nexport const Event = styled.li`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-left: 25px;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 30px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -25px;\n    width: 16px;\n    height: 16px;\n    border: 4px solid ${colors.lightGrey};\n    border-radius: 4px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n      left: -30px;\n    }\n  }\n\n  &:last-of-type::before {\n    border: 4px solid ${colors.white};\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 6px;\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const Container = styled.div`\n  text-align: end;\n`;\n\nexport const Data = styled.p`\n  font-family: 'Gilroy-Bold';\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.xs};\n  }\n`;\n\nexport const Percentage = styled.p`\n  font-size: ${textSize.xxs};\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 28px;\n  }\n`;\n\nexport const Time = styled.p`\n  font-size: 10px;\n  color: ${colors.lightGrey};\n  margin-top: 4px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    margin-top: 8px;\n  }\n`;\n\nexport const Pages = styled.p`\n  color: ${colors.lightGrey};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.xxs};\n  }\n`;\n\nexport const Speed = styled.p`\n  font-size: 9px;\n  color: ${colors.lightGrey};\n  margin-top: 7px;\n  width: 45px;\n  letter-spacing: -0.02em;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 55px;\n    font-size: 11px;\n  }\n`;\n\nexport const GrafficSvg = styled.svg`\n  width: 43px;\n  height: 18px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 59px;\n    height: 25px;\n    margin-top: 18px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 30px;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { readingTime } from '../../../../../helpers/books/readingTime';\nimport { calculatePercentage } from '../../../../../helpers/books/calculatePercentage';\nimport { formatDate } from '../../../../../helpers/books/formatDate';\nimport {\n  Box,\n  Container,\n  Data,\n  Event,\n  GrafficSvg,\n  Line,\n  Pages,\n  Percentage,\n  Speed,\n  Time,\n} from './DiaryEvent.styled';\nimport { readPages } from '../../../../../helpers/books/readPages';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteReadingEventAsync } from '../../../../../redux/books/booksOperations';\nimport { getReadingBook } from '../../../../../redux/books/booksSelectors';\n\nconst DiaryEvent = ({ event, totalPages }) => {\n  const book = useSelector(getReadingBook);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(\n      deleteReadingEventAsync({ bookId: book._id, readingId: event._id })\n    )\n      .unwrap()\n      .catch(() =>\n        Notiflix.Notify.warning(\n          'Oops! Somethimg went wrong. Please, try again',\n          {\n            position: 'center-center',\n          }\n        )\n      );\n  };\n\n  return event.finishReading ? (\n    <Event>\n      <Line></Line>\n      <div>\n        <Data>{formatDate(event.finishReading)}</Data>\n        <Percentage>\n          {calculatePercentage(event.finishPage - event.startPage, totalPages)}\n        </Percentage>\n        <Time>{readingTime(event.finishReading, event.startReading)}</Time>\n      </div>\n      <Box>\n        <Container>\n          <Pages>{readPages(event.startPage, event.finishPage)}</Pages>\n          <GrafficSvg>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-grafic\"></use>\n          </GrafficSvg>\n          <Speed>{event.speed} pages per hour</Speed>\n        </Container>\n\n        <button onClick={handleDelete}>\n          <svg width={14} height={14}>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-trashGrey\"></use>\n          </svg>\n        </button>\n      </Box>\n    </Event>\n  ) : null;\n};\n\nexport default DiaryEvent;\n","export const readPages = (startPage, endPage) => {\n  const pages = endPage - startPage;\n  return `${pages} pages`;\n};\n","import { useSelector } from 'react-redux';\nimport { getReadingBook } from '../../../../redux/books/booksSelectors';\nimport { List } from './Diary.styled';\nimport DiaryEvent from './DiaryEvent/DiaryEvent';\n\nconst Diary = () => {\n  const book = useSelector(getReadingBook);\n\n  const progress = book.progress;\n  const totalPages = book.totalPages;\n\n  return (\n    <List>\n      {progress?.map(event => (\n        <DiaryEvent key={event._id} event={event} totalPages={totalPages} />\n      ))}\n    </List>\n  );\n};\n\nexport default Diary;\n","import styled from 'styled-components';\nimport { colors, textSize } from '../../../../../css/variables';\n\nexport const CircleContainer = styled.div`\n  position: relative;\n  width: 116px;\n  height: 116px;\n\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    height: 138px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 189px;\n    height: 189px;\n  }\n`;\n\nexport const CircleSVG = styled.svg`\n  width: 100%;\n  height: 100%;\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n`;\n\nexport const BackgroundCircle = styled.circle`\n  stroke: ${colors.darkGrey};\n  stroke-width: 11;\n  fill: transparent;\n`;\n\nexport const ProgressCircle = styled.circle`\n  stroke: ${colors.green};\n  stroke-width: 10;\n  fill: transparent;\n  transition: stroke-dashoffset 0.35s;\n  stroke-linecap: round;\n`;\n\nexport const Text = styled.text`\n  fill: ${colors.white};\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  text-anchor: middle;\n  transform: rotate(90deg);\n  transform-origin: 60px 60px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  BackgroundCircle,\n  CircleContainer,\n  CircleSVG,\n  ProgressCircle,\n  Text,\n} from './CircularProgressBar.styled';\n\nconst CircularProgressBar = ({ percent }) => {\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    const radius = 50;\n    const circumference = 2 * Math.PI * radius;\n    const newOffset = circumference - (percent / 100) * circumference;\n    setOffset(newOffset);\n  }, [percent]);\n\n  return (\n    <CircleContainer>\n      <CircleSVG viewBox=\"0 0 120 120\">\n        <BackgroundCircle r={50} cx=\"60\" cy=\"60\" />\n        <ProgressCircle\n          r={50}\n          cx=\"60\"\n          cy=\"60\"\n          strokeDasharray={`${2 * Math.PI * 50} ${2 * Math.PI * 50}`}\n          strokeDashoffset={offset}\n        />\n        <Text x=\"60\" y=\"66\">\n          100%\n        </Text>\n      </CircleSVG>\n    </CircleContainer>\n  );\n};\n\nexport default CircularProgressBar;\n","import styled from 'styled-components';\nimport { colors, innerWrapper, textSize } from '../../../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${innerWrapper}\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    padding: 28px;\n    width: 321px;\n    margin-top: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 313px;\n  }\n`;\n\nexport const Percent = styled.p`\n  font-size: ${textSize.xxs};\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  padding-left: 29px;\n  margin-top: 21px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 14px;\n    height: 14px;\n    background-color: ${colors.green};\n    border-radius: 4px;\n  }\n`;\n\nexport const Pages = styled.p`\n  font-size: 10px;\n  color: ${colors.lightGrey};\n  margin-top: 4px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    margin-top: 8px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport CircularProgressBar from './ProgressBar/CircularProgressBar';\nimport { Box, Pages, Percent, Wrapper } from './Statistic.styled';\nimport { getReadingBook } from '../../../../redux/books/booksSelectors';\nimport { getPrevPercent } from 'helpers/books/getPrevPercent';\nimport { getCurrentPercent } from 'helpers/books/getCurrentPercent';\n\nconst Statistic = () => {\n  const book = useSelector(getReadingBook);\n\n  const readPages = book?.progress[book.progress?.length - 1].finishPage;\n  const totalPages = book?.totalPages;\n\n  const currentPercent = getCurrentPercent(readPages, totalPages);\n\n  const prevPercent = getPrevPercent(book, totalPages);\n\n  return (\n    <Wrapper>\n      {!currentPercent && !prevPercent ? (\n        <div>In progress</div>\n      ) : (\n        <>\n          <CircularProgressBar percent={currentPercent || prevPercent} />\n          <Box>\n            <Percent>{currentPercent || prevPercent}%</Percent>\n            <Pages>{readPages} pages read</Pages>\n          </Box>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Statistic;\n","export const getCurrentPercent = (readPages, totalPages) => {\n  const percentageRead = ((readPages / totalPages) * 100).toFixed(2);\n  const percentage = isNaN(percentageRead) ? false : percentageRead;\n  return percentage;\n};\n","export const getPrevPercent = (book, totalPages) => {\n  let prevPercent = null;\n  if (book.progress?.length >= 2) {\n    const readPrevPages = book?.progress[book.progress?.length - 2].finishPage;\n    prevPercent = ((readPrevPages / totalPages) * 100).toFixed(2);\n  }\n  return prevPercent;\n};\n","import { useState } from 'react';\nimport DashboardTitle from '../DashboardTitle/DashboardTitle';\nimport { Box, Navigation, Svg } from './Details.styled';\nimport Diary from './Diary/Diary';\nimport Statistic from './Statistic/Statistic';\n\nconst Details = () => {\n  const [activeButton, setActiveButton] = useState('diary');\n\n  const onStatisticClick = () => {\n    setActiveButton('statistic');\n  };\n\n  const onDiaryClick = () => {\n    setActiveButton('diary');\n  };\n\n  return (\n    <div>\n      <Navigation>\n        <DashboardTitle title=\"Diary\" />\n        <Box>\n          <button onClick={onDiaryClick}>\n            <Svg $isActive={activeButton === 'diary'}>\n              <use xlinkHref=\"./svg/svgSprite.svg#icon-diary\"></use>\n            </Svg>\n          </button>\n          <button onClick={onStatisticClick}>\n            <Svg $isActive={activeButton === 'statistic'}>\n              <use xlinkHref=\"./svg/svgSprite.svg#icon-statistic\"></use>\n            </Svg>\n          </button>\n        </Box>\n      </Navigation>\n\n      {activeButton === 'diary' ? <Diary /> : <Statistic />}\n    </div>\n  );\n};\n\nexport default Details;\n","import styled from 'styled-components';\nimport { buttonMixin } from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  ${buttonMixin}\n`;\n","import { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport FilterForm from '../FilterForm/FilterForm';\nimport FilterInput from '../FilterInput/FilterInput';\nimport FilterTitle from '../FilterTitle/FilterTitle';\nimport { Button, InputWrapper } from './FilterStartPage.styled';\nimport { startReadingBookAsync } from '../../../../redux/books/booksOperations';\n\nconst FilterStartPage = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ page }) => {\n    dispatch(startReadingBookAsync({ page, id }))\n      .unwrap()\n      .catch(error =>\n        Notiflix.Notify.failure(`${error}`, { position: 'center-center' })\n      );\n  };\n  return (\n    <div>\n      <FilterTitle title=\"Start page:\" />\n      <FilterForm onSubmit={onSubmit} initialValues={{ page: '' }}>\n        <InputWrapper>\n          <FilterInput\n            label=\"Page number:\"\n            placeholder=\"0\"\n            type=\"text\"\n            name=\"page\"\n          />\n        </InputWrapper>\n        <Button type=\"submit\">To start</Button>\n      </FilterForm>\n    </div>\n  );\n};\n\nexport default FilterStartPage;\n","import styled from 'styled-components';\nimport { colors, textSize } from '../../../css/variables';\n\nexport const ModalContant = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 89%;\n  max-width: 335px;\n  padding: 60px 47px;\n  border-radius: 12px;\n  border: 1px solid ${colors.lightGrey20};\n  background-color: ${colors.darkGrey};\n\n  @media screen and (min-width: 768px) {\n    width: 342px;\n    max-width: 342px;\n    padding: 50px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Image = styled.img`\n  width: 50px;\n  height: 50px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 68px;\n    height: 70px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  letter-spacing: -0.02em;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n    margin-bottom: 14px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: ${textSize.xxs};\n  color: ${colors.lightGrey};\n  letter-spacing: -0.02em;\n\n  span {\n    color: ${colors.white};\n  }\n`;\n","import {\n  CloseButton,\n  Image,\n  ModalContant,\n  Text,\n  Title,\n} from './ModalEndReading.styled';\n\nconst ModalEndReading = ({ onClose }) => {\n  return (\n    <ModalContant>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <svg width={28} height={28}>\n          <use xlinkHref=\"./svg/svgSprite.svg#icon-close\"></use>\n        </svg>\n      </CloseButton>\n      <Image src=\"./images/books.png\" alt=\"great\" />\n      <Title>The book is read</Title>\n      <Text>\n        It was an <span>exciting journey</span>, where each page revealed new\n        horizons, and the characters became inseparable friends.\n      </Text>\n    </ModalContant>\n  );\n};\n\nexport default ModalEndReading;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Progress from '../components/Dashboard/Progress/Progress';\nimport ReadingBook from '../components/ReadingBook/ReadingBook';\nimport FilterStopPage from '../components/Form/FilterForms/FilterStopPage/FilterStopPage';\nimport Details from '../components/Dashboard/Details/Details';\nimport FilterStartPage from '../components/Form/FilterForms/FilterStartPage/FilterStartPage';\nimport { getBookByIdAsync } from '../redux/books/booksOperations';\nimport { getReadingBook } from '../redux/books/booksSelectors';\nimport { getBookStatus } from '../helpers/books/getBookStatus';\nimport ModalPortal from '../components/Modal/ModalPortal/ModalPortal';\nimport ModalBackdrop from '../components/Modal/ModalBackdrop/ModalBackdrop';\nimport ModalEndReading from '../components/Modal/ModalEndReading/ModalEndReading';\n\nconst Reading = () => {\n  const book = useSelector(getReadingBook);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const bookId = searchParams.get('bookId');\n\n  const bookStatus = getBookStatus(book);\n\n  const handleOpenModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getBookByIdAsync({ id: bookId }));\n  }, [dispatch, bookId]);\n\n  return (\n    <>\n      <Dashboard\n        $padding={{ mob: '20px 20px 40px', tablet: '32px 32px 84px' }}\n        $gap=\"40px\"\n      >\n        {bookStatus.status === 'active' ? (\n          <FilterStopPage id={bookId} openModal={handleOpenModal} />\n        ) : (\n          <FilterStartPage id={bookId} />\n        )}\n        {bookStatus.status === null || !bookStatus.isBookStarted ? (\n          <Progress />\n        ) : (\n          <Details />\n        )}\n      </Dashboard>\n      <ReadingBook />\n\n      <ModalPortal isOpen={modalIsOpen}>\n        <ModalBackdrop onClose={closeModal}>\n          <ModalEndReading onClose={closeModal} />\n        </ModalBackdrop>\n      </ModalPortal>\n    </>\n  );\n};\n\nexport default Reading;\n","export const getBooks = state => state.books.books;\n\nexport const getReadingBook = state => state.books.readingBook;\n\nexport const getOwnBooks = state => state.books.ownBooks;\n\nexport const getCurrentPage = state => state.books.currentPage;\n\nexport const getTotalPages = state => state.books.totalPages;\n\nexport const getIsLoading = state => state.books.isLoading;\n\nexport const getIsError = state => state.books.isError;\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","wrapperMixin","props","_props$$padding","$padding","mob","$gap","_props$$padding2","tablet","_ref","children","_jsx","Title","h2","textSize","s","m","title","onSubmit","initialValues","Formik","Form","InputWrapper","colors","mediumGrey","lightGrey","Input","input","_templateObject2","white","label","field","useField","_jsxs","Backdrop","backdropMixin","onClose","handleKeyDown","event","key","useEffect","document","addEventListener","removeEventListener","onClick","target","currentTarget","l","Text","p","xxs","Image","img","_templateObject3","ImageBox","_templateObject4","Progress","DashboardTitle","src","alt","BookCard","h3","Author","_templateObject5","Svg","svg","_templateObject6","getBookStatus","book","progress","status","isBookStarted","lastItem","length","undefined","finishPage","ReadingBook","useSelector","getReadingBook","bookStatus","PagesTitle","imageUrl","author","xlinkHref","Button","button","buttonMixin","id","openModal","totalPages","dispatch","useDispatch","FilterTitle","FilterForm","_ref2","page","stopReadingBookAsync","unwrap","catch","error","Notiflix","failure","concat","position","FilterInput","placeholder","type","name","Navigation","Box","$isActive","List","ul","readingTime","endDate","startDate","start","Date","end","diffInMinutes","Math","floor","hours","minutes","calculatePercentage","pagesRead","toFixed","formatDate","dateString","date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","Line","darkGrey","Event","li","Container","Data","xs","Percentage","Time","_templateObject7","Pages","_templateObject8","Speed","_templateObject9","GrafficSvg","_templateObject10","finishReading","startPage","startReading","endPage","speed","handleDelete","deleteReadingEventAsync","bookId","_id","readingId","warning","width","height","readPages","Diary","map","DiaryEvent","CircleContainer","CircleSVG","BackgroundCircle","circle","ProgressCircle","green","text","percent","offset","setOffset","useState","circumference","PI","viewBox","r","cx","cy","strokeDasharray","strokeDashoffset","x","y","innerWrapper","Percent","Statistic","_book$progress","currentPercent","getCurrentPercent","percentageRead","isNaN","prevPercent","getPrevPercent","_book$progress2","_Fragment","CircularProgressBar","Details","activeButton","setActiveButton","onDiaryClick","onStatisticClick","startReadingBookAsync","ModalContant","lightGrey20","CloseButton","Reading","modalIsOpen","setModalIsOpen","location","useLocation","URLSearchParams","search","get","closeModal","getBookByIdAsync","Dashboard","FilterStopPage","handleOpenModal","FilterStartPage","ModalPortal","isOpen","ModalBackdrop","ModalEndReading","getBooks","state","books","readingBook","getOwnBooks","ownBooks","getCurrentPage","currentPage","getTotalPages","getIsLoading","isLoading"],"sourceRoot":""}