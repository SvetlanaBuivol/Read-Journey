{"version":3,"file":"static/js/355.03e884d5.chunk.js","mappings":"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","sources":["components/Form/FilterForms/FilterInput/FilterInput.styled.jsx","components/Form/FilterForms/FilterInput/FilterInput.jsx","components/Form/FilterForms/FilterRecommended/FilterRecommended.styled.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.styled.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.jsx","components/Form/FilterForms/FilterForm/FilterForm.jsx","components/Form/FilterForms/FilterRecommended/FilterRecommended.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/CallToAction/CallToAction.styled.jsx","components/Dashboard/DashboardTitle/DashboardTitle.styled.jsx","components/Dashboard/DashboardTitle/DashboardTitle.jsx","components/Dashboard/CallToAction/CallToAction.jsx","components/Dashboard/Quote/Quote.styled.jsx","components/Dashboard/Quote/Quote.jsx","components/PagesTitle/PagesTitle.styled.jsx","components/PagesTitle/PagesTitle.jsx","components/Recommended/RecommendedCard/RecommendedCard.styled.jsx","components/Recommended/RecommendedCard/RecomendedCard.jsx","components/Recommended/RecommendedList/RecommendedList.styled.jsx","components/Pagination/Pagination.styled.jsx","redux/books/booksSelectors.js","components/Pagination/Pagination.jsx","components/NoResults/NoResults.styled.jsx","components/NoResults/NoReasults.jsx","components/Recommended/RecommendedList/RecommendedList.jsx","helpers/getBooksPerPage/getBooksPerPage.js","pages/Recommended.jsx"],"sourcesContent":["import { colors } from \"../../../../css/variables\";\nimport styled from \"styled-components\";\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 14px 14px;\n  border-radius: 12px;\n  background-color: ${colors.mediumGrey};\n\n  /* ${props =>\n    props.$error &&\n    `\n    border: 1px solid ${colors.red};\n   `}\n\n  ${props =>\n    props.$valid &&\n    `\n    border: 1px solid ${colors.green};\n   `} */\n\n   label {\n    margin-right: 10px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 16px;\n  }\n`;\n\nexport const Input = styled.input`\nflex: 1;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  /* width: 100%; */\n\n  &::placeholder {\n    color: ${colors.white};\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;","import { useField } from 'formik';\nimport { Input, InputWrapper } from './FilterInput.styled';\n\nconst FilterInput = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <InputWrapper>\n      <label>{label}</label>\n      <Input {...field} {...props} />\n    </InputWrapper>\n  );\n};\n\nexport default FilterInput;\n","import styled from \"styled-components\";\nimport { buttonMixin } from \"../../../../css/variables\";\n\nexport const InputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin-bottom: 20px;\n`\n\nexport const Button = styled.button`\n    ${buttonMixin}\n`\n\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n    font-size: 10px;\n    margin-left: 14px;\n    margin-bottom: 8px;\n\n    @media screen and (min-width: 768px) {\n        \n    }\n`","import { Title } from \"./FilterTitle.styled\";\n\nconst FilterTitle = ({title}) => {\n    return (\n        <Title>{title}</Title>\n   )\n}\n\nexport default FilterTitle;","import { Form, Formik } from \"formik\";\n\nconst FilterForm = ({onSubmit, children, initialValues}) => {\n    return (\n       <Formik\n      initialValues={initialValues}\n    //   validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <Form >{children}</Form>}\n    </Formik>\n   )\n}\n\nexport default FilterForm;","import FilterInput from '../FilterInput/FilterInput';\nimport { Button, InputWrapper } from './FilterRecommended.styled';\nimport FilterTitle from '../FilterTitle/FilterTitle';\nimport FilterForm from '../FilterForm/FilterForm';\nimport { useDispatch } from 'react-redux';\nimport { recommendedBooksAsync } from '../../../../redux/books/booksOperations';\nimport Notiflix from 'notiflix';\n\nconst FilterRecommended = () => {\n  const dispatch = useDispatch()\n\n  const onSubmit = ({ title, author }, actions) => {\n    // filterBooks({title, author})\n    if (title || author) {\n      dispatch(recommendedBooksAsync({title, author}))\n    actions.resetForm();\n    } else {\n      Notiflix.Notify.warning('At least one field must be filled in', {\n        position: 'center-center'\n      })\n    }\n     \n  };\n  return (\n    <div>\n      <FilterTitle title=\"Filter:\" />\n      <FilterForm onSubmit={onSubmit} initialValues={{ title: '', author: '' }}>\n        <InputWrapper>\n          <FilterInput\n            label=\"Book title:\"\n            placeholder=\"Enter text\"\n            type=\"text\"\n            name=\"title\"\n          />\n          <FilterInput\n            label=\"The author:\"\n            placeholder=\"Enter text\"\n            type=\"text\"\n            name=\"author\"\n          />\n        </InputWrapper>\n        <Button type=\"submit\">To apply</Button>\n      </FilterForm>\n    </div>\n  );\n};\n\nexport default FilterRecommended;\n","import styled from \"styled-components\";\nimport { wrapperMixin } from \"../../css/variables\";\n\nexport const Wrapper = styled.div`\n    ${wrapperMixin}\n    flex-direction: column;\n    padding: 20px;\n    gap: ${props => props.$gap || '20px'};\n\n    @media screen and (min-width: 768px) {\n        flex-direction: row;\n        padding: 32px;\n    }\n\n    @media screen and (min-width: 1440px) {\n        flex-direction: column;\n        width: 353px;\n        padding: 40px 20px 20px;\n    }\n`","import { Wrapper } from \"./Dashboard.styled\";\n\nconst Dashboard = ({children, $gap}) => {\n    return (\n        <Wrapper $gap={$gap}>\n            {children}\n       </Wrapper>\n   )\n}\n\nexport default Dashboard;","import styled from 'styled-components';\nimport { colors, innerWrapper, textSize } from '../../../css/variables';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  ${innerWrapper}\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 313px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const Number = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 11px 16px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${colors.white};\n  color: ${colors.darkGrey};\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  letter-spacing: -0.02em;\n  line-height: 1;\n`;\n\nexport const Text = styled.p`\n  font-size: ${textSize.xxs};\n  letter-spacing: -0.02em;\n\n  span {\n    color: ${colors.lightGrey};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n`\n\nexport const StyledLink = styled(Link)`\n    font-size: ${textSize.xxs};\n    color: ${colors.lightGrey};\n    letter-spacing: -0.02em;\n`\n","import { textSize } from \"css/variables\";\nimport styled from \"styled-components\";\n\nexport const Title = styled.h2`\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.s};\n    line-height: 1;\n    letter-spacing: -0.02em;\n\n    @media screen and (min-width: 768px) {\n        font-size: ${textSize.m};\n    }\n`","import { Title } from \"./DashboardTitle.styled\";\n\nconst DashboardTitle = ({title}) => {\n    return <Title>{title}</Title>\n}\n\nexport default DashboardTitle;","import {\n  LinkWrapper,\n  List,\n  ListItem,\n  Number,\n  StyledLink,\n  Text,\n  Wrapper,\n} from './CallToAction.styled';\nimport DashboardTitle from '../DashboardTitle/DashboardTitle';\nimport { Link } from 'react-router-dom';\n\nconst CallToAction = () => {\n  return (\n    <Wrapper>\n      <DashboardTitle title=\"Start your workout\" />\n      <List>\n        <ListItem>\n          <Number>1</Number>\n          <Text>\n            Create a personal library:{' '}\n            <span>add the books you intend to read to it.</span>\n          </Text>\n        </ListItem>\n        <ListItem>\n          <Number>2</Number>\n          <Text>\n            Create your first workout:{' '}\n            <span>define a goal, choose a period, start training.</span>\n          </Text>\n        </ListItem>\n      </List>\n      <LinkWrapper>\n        <StyledLink to={'/library'}>My library</StyledLink>\n        <Link to={'/library'}>\n          <svg width={24} height={24}>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-to\"></use>\n          </svg>\n        </Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n\nexport default CallToAction;\n","import styled from 'styled-components';\nimport { colors, innerWrapper, textSize } from '../../../css/variables';\n\nexport const Wrapper = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    ${innerWrapper}\n    display: flex;\n    align-items: center;\n    gap: 14px;\n    width: 100%;\n    padding: 15px 20px;\n    /* border-radius: 12px;\n    background-color: ${colors.mediumGrey}; */\n\n    p {\n      font-size: ${textSize.xxs};\n      letter-spacing: -0.02em;\n      color: ${colors.lightGrey};\n\n      span {\n        color: ${colors.white};\n      }\n    }\n  }\n`;\n","import { Wrapper } from \"./Quote.styled\";\n\nconst Quote = () => {\n    return (\n        <Wrapper>\n              <img width={40} height={40} src=\"./images/books.png\" alt=\"books\" />\n              <p>\"Books are <span>windows</span> to the world, and reading is a journey into the unknown.\"</p>\n      </Wrapper>\n    )\n}\n\nexport default Quote;","import styled from \"styled-components\";\nimport { textSize } from \"../../css/variables\";\n\nexport const Title = styled.h2`\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.m};\n    line-height: 1;\n    letter-spacing: -0.02em;\n\n    @media screen and (min-width: 768px) {\n        font-size: ${textSize.l};\n        letter-spacing: inherit;\n        line-height: 1.14;\n    }\n`","import { Title } from \"./PagesTitle.styled\";\n\nconst PagesTitle = ({title}) => {\n    return <Title>{title}</Title>\n}\n\nexport default PagesTitle;","import styled from \"styled-components\";\nimport { colors, textSize } from \"../../../css/variables\";\n\nexport const BookCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    width: 137px;\n\n    img {\n        height: 208px;\n        border-radius: 8px;\n    }\n`\n\nexport const BookInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    h3 {\n        font-family: 'Gilroy-Bold';\n        font-size: ${textSize.xxs};\n        letter-spacing: -0.02em;\n    }\n\n    p {\n        font-size: 10px;\n        letter-spacing: -0.02em;\n        color: ${colors.lightGrey};\n    }\n`","import { BookCard, BookInfo } from \"./RecommendedCard.styled\";\n\nconst RecommendedCard = ({img, bookTitle, author}) => {\n    return (\n        <BookCard>\n            <img src={img} alt={bookTitle} />\n            <BookInfo>\n                <h3>{bookTitle}</h3>\n                <p>{author}</p>\n            </BookInfo>\n        </BookCard>\n    )\n}\n\nexport default RecommendedCard;","import { wrapperMixin } from 'css/variables';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  position: relative;\n  flex-direction: column;\n  padding: 40px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 40px 40px 28px;\n  }\n`;\n\nexport const BooksList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 21px;\n  margin-top: 34px;\n\n  @media screen and (min-width: 768px) {\n    gap: 27px 25px;\n    margin-top: 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../css/variables';\n\nexport const PaginateWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  gap: 8px;\n  top: 40px;\n  right: 20px;\n\n  @media screen and (min-width: 768px) {\n    right: 40px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n  border-radius: 50%;\n  border: 1px solid ${colors.transparentWhite};\n\n\n  svg {\n    width: 16px;\n    height: 16px;\n    fill: transparent;\n    stroke: ${props => (props.disabled ? `${colors.transparentWhite}` : `${colors.white}`)} ;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n  }\n`;\n","export const getBooks = state => state.books.books;\n\nexport const getCurrentPage = state => state.books.currentPage;\n\nexport const getTotalPages = state => state.books.totalPages;","import { useDispatch, useSelector } from \"react-redux\";\nimport { Button, PaginateWrapper } from \"./Pagination.styled\";\nimport { getCurrentPage, getTotalPages } from \"../../redux/books/booksSelectors\";\nimport { goToNextPage, goToPrevPage } from \"../../redux/books/booksSlice\";\n\nconst Pagination = () => {\n    const currentPage = useSelector(getCurrentPage)\n    const totalPages = useSelector(getTotalPages)\n    const dispatch = useDispatch()\n\n    const handleNextPage = () => {\n        dispatch(goToNextPage())\n    }\n\n    const handlePrevPage = () => {\n        dispatch(goToPrevPage())\n    }\n    return (\n        <PaginateWrapper>\n            <Button type=\"button\" disabled={currentPage === 1} onClick={handlePrevPage}>\n                <svg><use xlinkHref=\"./svg/svgSprite.svg#icon-left\"></use></svg>\n            </Button>\n            <Button type=\"button\" disabled={currentPage === totalPages} onClick={handleNextPage}>\n                <svg><use xlinkHref=\"./svg/svgSprite.svg#icon-right\"></use></svg>\n            </Button>\n       </PaginateWrapper>\n   )\n}\n\nexport default Pagination;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 65px auto;\n\n  @media screen and (min-width: 1440px) {\n    margin: auto;\n  }\n\n  p {\n    text-align: center;\n  }\n`;\nexport const StyledImage = styled.img`\n  display: block;\n  width: 100px;\n  height: 100px;\n\n  @media screen and (min-width: 768px) {\n    width: 130px;\n    height: 130px;\n  }\n`;\n","import { Container, StyledImage } from \"./NoResults.styled\";\n\nconst NoResults = () => {\n  return (\n    <Container>\n      <StyledImage src=\"./images/bookDefault.png\" alt=\"No results\" />\n      <p>Oops! Nothing found for your search query.<br/> Please try again</p>\n    </Container>\n  );\n};\n\nexport default NoResults;\n","import PagesTitle from 'components/PagesTitle/PagesTitle';\nimport RecommendedCard from '../RecommendedCard/RecomendedCard';\nimport { BooksList, Wrapper } from './RecommendedList.styled';\nimport Pagination from 'components/Pagination/Pagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBooks, getCurrentPage } from '../../../redux/books/booksSelectors';\nimport { useMediaQuery } from 'react-responsive';\nimport { getBooksPerPage } from 'helpers/getBooksPerPage/getBooksPerPage';\nimport { useEffect } from 'react';\nimport { recommendedBooksAsync } from '../../../redux/books/booksOperations';\nimport NoResults from '../../../components/NoResults/NoReasults';\n\nconst RecommendedList = () => {\n  const books = useSelector(getBooks);\n  const currentPage = useSelector(getCurrentPage);\n\n  const dispatch = useDispatch();\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ maxWidth: 1439 });\n\n  const limit = getBooksPerPage({ isMobile, isTablet });\n\n  useEffect(() => {\n    dispatch(recommendedBooksAsync({ limit, page: currentPage })).catch(() => {\n      console.log('fail');\n    });\n  }, [dispatch, limit, currentPage]);\n\n  return (\n    <Wrapper>\n      <PagesTitle title=\"Recommended\" />\n      {books.length ? (<BooksList>\n        {books.map(book => (\n          <li key={book._id}>\n            <RecommendedCard\n              bookTitle={book.title}\n              img={book.imageUrl}\n              author={book.author}\n            />\n          </li>\n        ))}\n      </BooksList>) : (<NoResults/>)\n      }\n      <Pagination/>\n    </Wrapper>\n  );\n};\n\nexport default RecommendedList;\n","export const getBooksPerPage = ({isMobile, isTablet}) => {\n    if (isMobile) {\n        return 2\n    } else if (isTablet) {\n        return 8\n    } else {\n        return 10\n    }\n}\n\n","// import { useDispatch, useSelector } from 'react-redux';\n// import { useMediaQuery } from 'react-responsive';\n// import { useEffect } from 'react';\nimport FilterRecommended from '../components/Form/FilterForms/FilterRecommended/FilterRecommended';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport CallToAction from '../components/Dashboard/CallToAction/CallToAction';\nimport Quote from '../components/Dashboard/Quote/Quote';\nimport RecommendedList from '../components/Recommended/RecommendedList/RecommendedList';\n// import { recommendedBooksAsync } from '../redux/books/booksOperations';\n// import { getBooks, getCurrentPage } from '../redux/books/booksSelectors';\n// import { getBooksPerPage } from '../helpers/getBooksPerPage/getBooksPerPage';\n\nconst Recommended = () => {\n  // const books = useSelector(getBooks);\n  // const currentPage = useSelector(getCurrentPage);\n\n  // const dispatch = useDispatch();\n\n  // const isMobile = useMediaQuery({ maxWidth: 767 });\n  // const isTablet = useMediaQuery({ maxWidth: 1439 });\n\n  // const limit = getBooksPerPage({ isMobile, isTablet });\n\n  // useEffect(() => {\n  //   dispatch(recommendedBooksAsync({ limit, page: currentPage })).catch(() => {\n  //     console.log('fail');\n  //   });\n  // }, [dispatch, limit, currentPage]);\n\n  \n  // const filterBooks = ({ title, author }) => {\n  //   console.log(title, author)\n  //    return {title, author}\n  // }\n\n  return (\n    <>\n      <Dashboard>\n        <FilterRecommended\n          // filterBooks={filterBooks}\n        />\n        <CallToAction />\n        <Quote />\n      </Dashboard>\n\n      <RecommendedList  />\n    </>\n  );\n};\n\nexport default Recommended;\n"],"names":["InputWrapper","styled","div","_templateObject","_taggedTemplateLiteral","colors","mediumGrey","props","$error","concat","red","$valid","green","lightGrey","Input","input","_templateObject2","white","_ref","label","field","useField","_jsxs","children","_jsx","Button","button","buttonMixin","Title","h2","title","onSubmit","initialValues","Formik","Form","FilterRecommended","dispatch","useDispatch","FilterTitle","FilterForm","actions","author","recommendedBooksAsync","resetForm","Notiflix","warning","position","FilterInput","placeholder","type","name","Wrapper","wrapperMixin","$gap","innerWrapper","List","ul","ListItem","li","_templateObject3","Number","_templateObject4","darkGrey","textSize","s","Text","p","_templateObject5","xxs","LinkWrapper","_templateObject6","StyledLink","Link","_templateObject7","m","CallToAction","DashboardTitle","to","width","height","xlinkHref","Quote","src","alt","l","BookCard","BookInfo","img","bookTitle","BooksList","PaginateWrapper","transparentWhite","disabled","getBooks","state","books","getCurrentPage","currentPage","getTotalPages","totalPages","Pagination","useSelector","onClick","handlePrevPage","goToPrevPage","handleNextPage","goToNextPage","Container","StyledImage","NoResults","RecommendedList","limit","isMobile","isTablet","getBooksPerPage","useMediaQuery","maxWidth","useEffect","page","catch","console","log","PagesTitle","length","map","book","RecommendedCard","imageUrl","_id","Recommended","_Fragment","Dashboard"],"sourceRoot":""}