{"version":3,"file":"static/js/261.e68637d0.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/DashboardTitle/DashboardTitle.styled.jsx","components/Dashboard/DashboardTitle/DashboardTitle.jsx","components/Form/FilterForms/FilterForm/FilterForm.jsx","components/Form/FilterForms/FilterInput/FilterInput.styled.jsx","components/Form/FilterForms/FilterInput/FilterInput.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.styled.jsx","components/Form/FilterForms/FilterTitle/FilterTitle.jsx","components/Modal/ModalBackdrop/ModalBackdrop.styled.jsx","components/Modal/ModalBackdrop/ModalBackdrop.jsx","components/Modal/ModalBookCard/ModalBookCard.styled.jsx","components/Modal/ModalBookCard/ModalBookCard.jsx","components/NoResults/NoResults.styled.jsx","components/NoResults/NoReasults.jsx","components/PagesTitle/PagesTitle.styled.jsx","components/PagesTitle/PagesTitle.jsx","components/Form/FilterForms/FilterRecommended/FilterRecommended.styled.jsx","components/Form/FilterForms/FilterRecommended/FilterRecommended.jsx","components/Dashboard/CallToAction/CallToAction.styled.jsx","components/Dashboard/CallToAction/CallToAction.jsx","components/Dashboard/Quote/Quote.styled.jsx","components/Dashboard/Quote/Quote.jsx","components/Recommended/RecommendedCard/RecommendedCard.styled.jsx","components/Recommended/RecommendedCard/RecomendedCard.jsx","components/Recommended/RecommendedList/RecommendedList.styled.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Recommended/RecommendedList/RecommendedList.jsx","helpers/books/getBooksPerPage.js","pages/Recommended.jsx","redux/books/booksSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { wrapperMixin } from '../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  flex-direction: column;\n  padding: ${props => props.$padding?.mob || '20px'};\n  gap: ${props => props.$gap || '20px'};\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: ${props => props.$padding?.tablet || '32px'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n    width: 353px;\n    padding: 40px 20px 20px;\n  }\n`;\n","import { Wrapper } from './Dashboard.styled';\n\nconst Dashboard = ({ children, $gap, $padding }) => {\n  return (\n    <Wrapper $gap={$gap} $padding={$padding}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { textSize } from 'css/variables';\n\nexport const Title = styled.h2`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  line-height: 1;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.m};\n  }\n`;\n","import { Title } from './DashboardTitle.styled';\n\nconst DashboardTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default DashboardTitle;\n","import { Form, Formik } from 'formik';\n\nconst FilterForm = ({ onSubmit, children, initialValues }) => {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      {() => <Form>{children}</Form>}\n    </Formik>\n  );\n};\n\nexport default FilterForm;\n","import styled from 'styled-components';\nimport { colors } from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 14px 14px;\n  border-radius: 12px;\n  background-color: ${colors.mediumGrey};\n\n  label {\n    margin-right: 10px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      width: 87px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 16px;\n  }\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n\n  &::placeholder {\n    color: ${colors.white};\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n","import { useField } from 'formik';\nimport { Input, InputWrapper } from './FilterInput.styled';\n\nconst FilterInput = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <InputWrapper>\n      <label>{label}</label>\n      <Input {...field} {...props} />\n    </InputWrapper>\n  );\n};\n\nexport default FilterInput;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 10px;\n  margin-left: 14px;\n  margin-bottom: 8px;\n`;\n","import { Title } from './FilterTitle.styled';\n\nconst FilterTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default FilterTitle;\n","import styled from 'styled-components';\nimport { backdropMixin } from '../../../css/variables';\n\nexport const Backdrop = styled.div`\n  ${backdropMixin}\n  justify-content: center;\n  align-items: center;\n`;\n","import { useEffect } from 'react';\nimport { Backdrop } from './ModalBackdrop.styled';\n\nconst ModalBackdrop = ({ onClose, children }) => {\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onClose]);\n\n  return <Backdrop onClick={handleBackdropClick}>{children}</Backdrop>;\n};\n\nexport default ModalBackdrop;\n","import styled from 'styled-components';\nimport { buttonMixin, colors, textSize } from '../../../css/variables';\n\nexport const ModalContant = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 89%;\n  max-width: 335px;\n  padding: 40px 97px;\n  border-radius: 12px;\n  border: 1px solid ${colors.lightGrey20};\n  background-color: ${colors.darkGrey};\n\n  @media screen and (min-width: 768px) {\n    width: 65%;\n    max-width: 500px;\n    padding: 50px 167px;\n  }\n`;\n\nexport const BookCard = styled.div`\n  width: 140px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 153px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Image = styled.img`\n  width: 140px;\n  height: 213px;\n  margin-bottom: 16px;\n  border-radius: 11px;\n\n  @media screen and (min-width: 768px) {\n    width: 153px;\n    height: 233px;\n  }\n`;\n\nexport const BookTitle = styled.h3`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  line-height: 1;\n  letter-spacing: -0.02em;\n  margin-bottom: 2px;\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport const Author = styled.p`\n  line-height: 1.16;\n  letter-spacing: -0.02em;\n  color: ${colors.lightGrey};\n  margin-bottom: 4px;\n`;\n\nexport const Pages = styled.p`\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Button = styled.button`\n  ${buttonMixin}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport {\n  Author,\n  BookCard,\n  BookTitle,\n  Button,\n  CloseButton,\n  Image,\n  ModalContant,\n  Pages,\n} from './ModalBookCard.styled';\nimport {\n  addBookByIdAsync,\n  getOwnBooksAsync,\n} from '../../../redux/books/booksOperations';\nimport { getOwnBooks } from '../../../redux/books/booksSelectors';\n\nconst ModalBookCard = ({ onClose, book, myLibrary }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const ownBooks = useSelector(getOwnBooks);\n\n  useEffect(() => {\n    dispatch(getOwnBooksAsync());\n  }, [dispatch]);\n\n  const handleAddBook = () => {\n    const existingBook = ownBooks.some(item => item.title === book.bookTitle);\n    if (ownBooks.length === 0 || !existingBook) {\n      dispatch(addBookByIdAsync(book.id))\n        .unwrap()\n        .then(() =>\n          Notiflix.Notify.success('Added to your library', {\n            position: 'center-center',\n          })\n        )\n        .catch(() =>\n          Notiflix.Notify.failure(\n            'OOps! Something went wrong. Please, try again',\n            { position: 'center-center' }\n          )\n        );\n    } else {\n      Notiflix.Notify.warning('This book is already in your library', {\n        position: 'center-center',\n      });\n    }\n\n    onClose();\n  };\n\n  const handleStartReading = () => {\n    onClose();\n    navigate(`/reading?bookId=${book.id}`);\n  };\n\n  return (\n    <ModalContant>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <svg width={28} height={28}>\n          <use xlinkHref=\"./svg/svgSprite.svg#icon-close\"></use>\n        </svg>\n      </CloseButton>\n\n      <BookCard>\n        <Image\n          src={book.img || './images/ownDefaultImage.jpg'}\n          alt=\"bookTitle\"\n        />\n        <BookTitle>{book.bookTitle}</BookTitle>\n        <Author>{book.author}</Author>\n        <Pages>{book.totalPages} pages</Pages>\n      </BookCard>\n      {myLibrary ? (\n        <Button onClick={handleStartReading}>Start reading</Button>\n      ) : (\n        <Button onClick={handleAddBook}>Add to library</Button>\n      )}\n    </ModalContant>\n  );\n};\n\nexport default ModalBookCard;\n","import styled from 'styled-components';\nimport { colors, textSize } from '../../css/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 65px auto;\n\n  @media screen and (min-width: 1440px) {\n    margin: auto;\n  }\n\n  p {\n    text-align: center;\n    width: 197px;\n    color: ${colors.lightGrey};\n    font-size: ${textSize.xxs};\n    span {\n      color: ${colors.white};\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 274px;\n    }\n  }\n`;\nexport const StyledImage = styled.img`\n  display: block;\n  width: 100px;\n  height: 100px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 130px;\n    height: 130px;\n    margin-bottom: 30px;\n  }\n`;\n","import { Container, StyledImage } from './NoResults.styled';\n\nconst NoResults = ({ text }) => {\n  return (\n    <Container>\n      <StyledImage src=\"./images/bookDefault.png\" alt=\"No results\" />\n      <p dangerouslySetInnerHTML={{ __html: text }} />\n    </Container>\n  );\n};\n\nexport default NoResults;\n","import styled from 'styled-components';\nimport { textSize } from '../../css/variables';\n\nexport const Title = styled.h2`\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.m};\n  line-height: 1;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.l};\n    letter-spacing: inherit;\n    line-height: 1.14;\n  }\n`;\n","import { Title } from './PagesTitle.styled';\n\nconst PagesTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default PagesTitle;\n","import styled from 'styled-components';\nimport { buttonMixin } from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  ${buttonMixin}\n`;\n","import { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport FilterInput from '../FilterInput/FilterInput';\nimport { Button, InputWrapper } from './FilterRecommended.styled';\nimport FilterTitle from '../FilterTitle/FilterTitle';\nimport FilterForm from '../FilterForm/FilterForm';\nimport { recommendedBooksAsync } from '../../../../redux/books/booksOperations';\n\nconst FilterRecommended = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ title, author }, actions) => {\n    if (title || author) {\n      dispatch(recommendedBooksAsync({ title, author }));\n      actions.resetForm();\n    } else {\n      Notiflix.Notify.warning('At least one field must be filled in', {\n        position: 'center-center',\n      });\n    }\n  };\n  return (\n    <div>\n      <FilterTitle title=\"Filter:\" />\n      <FilterForm onSubmit={onSubmit} initialValues={{ title: '', author: '' }}>\n        <InputWrapper>\n          <FilterInput\n            label=\"Book title:\"\n            placeholder=\"Enter text\"\n            type=\"text\"\n            name=\"title\"\n          />\n          <FilterInput\n            label=\"The author:\"\n            placeholder=\"Enter text\"\n            type=\"text\"\n            name=\"author\"\n          />\n        </InputWrapper>\n        <Button type=\"submit\">To apply</Button>\n      </FilterForm>\n    </div>\n  );\n};\n\nexport default FilterRecommended;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { colors, innerWrapper, textSize } from '../../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${innerWrapper}\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 313px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const Number = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 11px 16px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${colors.white};\n  color: ${colors.darkGrey};\n  font-family: 'Gilroy-Bold';\n  font-size: ${textSize.s};\n  letter-spacing: -0.02em;\n  line-height: 1;\n`;\n\nexport const Text = styled.p`\n  font-size: ${textSize.xxs};\n  letter-spacing: -0.02em;\n\n  span {\n    color: ${colors.lightGrey};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: ${textSize.xxs};\n  color: ${colors.lightGrey};\n  letter-spacing: -0.02em;\n`;\n","import { Link } from 'react-router-dom';\nimport DashboardTitle from '../DashboardTitle/DashboardTitle';\nimport {\n  LinkWrapper,\n  List,\n  ListItem,\n  Number,\n  StyledLink,\n  Text,\n  Wrapper,\n} from './CallToAction.styled';\n\nconst CallToAction = () => {\n  return (\n    <Wrapper>\n      <DashboardTitle title=\"Start your workout\" />\n      <List>\n        <ListItem>\n          <Number>1</Number>\n          <Text>\n            Create a personal library:{' '}\n            <span>add the books you intend to read to it.</span>\n          </Text>\n        </ListItem>\n        <ListItem>\n          <Number>2</Number>\n          <Text>\n            Create your first workout:{' '}\n            <span>define a goal, choose a period, start training.</span>\n          </Text>\n        </ListItem>\n      </List>\n      <LinkWrapper>\n        <StyledLink to={'/library'}>My library</StyledLink>\n        <Link to={'/library'}>\n          <svg width={24} height={24}>\n            <use xlinkHref=\"./svg/svgSprite.svg#icon-to\"></use>\n          </svg>\n        </Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n\nexport default CallToAction;\n","import styled from 'styled-components';\nimport { colors, innerWrapper, textSize } from '../../../css/variables';\n\nexport const Wrapper = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    ${innerWrapper}\n    display: flex;\n    align-items: center;\n    gap: 14px;\n    width: 100%;\n    padding: 15px 20px;\n\n    p {\n      font-size: ${textSize.xxs};\n      letter-spacing: -0.02em;\n      color: ${colors.lightGrey};\n\n      span {\n        color: ${colors.white};\n      }\n    }\n  }\n`;\n","import { Wrapper } from './Quote.styled';\n\nconst Quote = () => {\n  return (\n    <Wrapper>\n      <img width={40} height={40} src=\"./images/books.png\" alt=\"books\" />\n      <p>\n        \"Books are <span>windows</span> to the world, and reading is a journey\n        into the unknown.\"\n      </p>\n    </Wrapper>\n  );\n};\n\nexport default Quote;\n","import styled from 'styled-components';\nimport { colors, textSize } from '../../../css/variables';\n\nexport const BookCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 137px;\n\n  img {\n    height: 208px;\n    border-radius: 8px;\n  }\n`;\n\nexport const BookInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  h3 {\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.xxs};\n    letter-spacing: -0.02em;\n  }\n\n  p {\n    font-size: 10px;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n  }\n`;\n","import { useState } from 'react';\nimport { BookCard, BookInfo } from './RecommendedCard.styled';\nimport ModalBackdrop from '../../../components/Modal/ModalBackdrop/ModalBackdrop';\nimport ModalBookCard from '../../Modal/ModalBookCard/ModalBookCard';\nimport ModalPortal from '../../../components/Modal/ModalPortal/ModalPortal';\n\nconst RecommendedCard = ({ img, bookTitle, author, totalPages, id }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  return (\n    <>\n      <BookCard>\n        <img src={img} alt={bookTitle} onClick={handleOpenModal} />\n        <BookInfo>\n          <h3>{bookTitle}</h3>\n          <p>{author}</p>\n        </BookInfo>\n      </BookCard>\n\n      <ModalPortal isOpen={modalIsOpen}>\n        <ModalBackdrop onClose={closeModal}>\n          <ModalBookCard\n            onClose={closeModal}\n            book={{ img, bookTitle, author, totalPages, id }}\n          />\n        </ModalBackdrop>\n      </ModalPortal>\n    </>\n  );\n};\n\nexport default RecommendedCard;\n","import styled from 'styled-components';\nimport { wrapperMixin } from 'css/variables';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  position: relative;\n  flex-direction: column;\n  padding: 40px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 40px 40px 28px;\n  }\n`;\n\nexport const BooksList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 21px;\n  margin-top: 34px;\n\n  @media screen and (min-width: 768px) {\n    gap: 27px 25px;\n    margin-top: 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../css/variables';\n\nexport const PaginateWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  gap: 8px;\n  top: 40px;\n  right: 20px;\n\n  @media screen and (min-width: 768px) {\n    right: 40px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n  border-radius: 50%;\n  border: 1px solid ${colors.transparentWhite};\n\n  svg {\n    width: 16px;\n    height: 16px;\n    fill: transparent;\n    stroke: ${props =>\n      props.disabled ? `${colors.transparentWhite}` : `${colors.white}`};\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, PaginateWrapper } from './Pagination.styled';\nimport {\n  getCurrentPage,\n  getIsLoading,\n  getTotalPages,\n} from '../../redux/books/booksSelectors';\nimport { goToNextPage, goToPrevPage } from '../../redux/books/booksSlice';\n\nconst Pagination = () => {\n  const currentPage = useSelector(getCurrentPage);\n  const totalPages = useSelector(getTotalPages);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  const handleNextPage = () => {\n    dispatch(goToNextPage());\n  };\n\n  const handlePrevPage = () => {\n    dispatch(goToPrevPage());\n  };\n\n  return (\n    <PaginateWrapper>\n      <Button\n        type=\"button\"\n        disabled={currentPage === 1 || isLoading}\n        onClick={handlePrevPage}\n      >\n        <svg>\n          <use xlinkHref=\"./svg/svgSprite.svg#icon-left\"></use>\n        </svg>\n      </Button>\n      <Button\n        type=\"button\"\n        disabled={currentPage === totalPages || isLoading}\n        onClick={handleNextPage}\n      >\n        <svg>\n          <use xlinkHref=\"./svg/svgSprite.svg#icon-right\"></use>\n        </svg>\n      </Button>\n    </PaginateWrapper>\n  );\n};\n\nexport default Pagination;\n","import { useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport PagesTitle from '../../../components/PagesTitle/PagesTitle';\nimport RecommendedCard from '../RecommendedCard/RecomendedCard';\nimport { BooksList, Wrapper } from './RecommendedList.styled';\nimport Pagination from '../../../components/Pagination/Pagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBooks, getCurrentPage } from '../../../redux/books/booksSelectors';\nimport { getBooksPerPage } from '../../../helpers/books/getBooksPerPage';\nimport { recommendedBooksAsync } from '../../../redux/books/booksOperations';\nimport NoResults from '../../../components/NoResults/NoReasults';\n\nconst RecommendedList = () => {\n  const books = useSelector(getBooks);\n  const currentPage = useSelector(getCurrentPage);\n\n  const dispatch = useDispatch();\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ maxWidth: 1439 });\n\n  const limit = getBooksPerPage({ isMobile, isTablet });\n\n  useEffect(() => {\n    dispatch(recommendedBooksAsync({ limit, page: currentPage }));\n  }, [dispatch, limit, currentPage]);\n\n  return (\n    <Wrapper>\n      <PagesTitle title=\"Recommended\" />\n      {books.length ? (\n        <BooksList>\n          {books.map(book => (\n            <li key={book._id}>\n              <RecommendedCard\n                bookTitle={book.title}\n                img={book.imageUrl}\n                author={book.author}\n                totalPages={book.totalPages}\n                id={book._id}\n              />\n            </li>\n          ))}\n        </BooksList>\n      ) : (\n        <NoResults text=\"Oops! <span>Nothing found</span> for your search query. Please try again\" />\n      )}\n      <Pagination />\n    </Wrapper>\n  );\n};\n\nexport default RecommendedList;\n","export const getBooksPerPage = ({ isMobile, isTablet }) => {\n  if (isMobile) {\n    return 2;\n  } else if (isTablet) {\n    return 8;\n  } else {\n    return 10;\n  }\n};\n","import FilterRecommended from '../components/Form/FilterForms/FilterRecommended/FilterRecommended';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport CallToAction from '../components/Dashboard/CallToAction/CallToAction';\nimport Quote from '../components/Dashboard/Quote/Quote';\nimport RecommendedList from '../components/Recommended/RecommendedList/RecommendedList';\n\nconst Recommended = () => {\n  return (\n    <>\n      <Dashboard>\n        <FilterRecommended />\n        <CallToAction />\n        <Quote />\n      </Dashboard>\n\n      <RecommendedList />\n    </>\n  );\n};\n\nexport default Recommended;\n","export const getBooks = state => state.books.books;\n\nexport const getReadingBook = state => state.books.readingBook;\n\nexport const getOwnBooks = state => state.books.ownBooks;\n\nexport const getCurrentPage = state => state.books.currentPage;\n\nexport const getTotalPages = state => state.books.totalPages;\n\nexport const getIsLoading = state => state.books.isLoading;\n\nexport const getIsError = state => state.books.isError;\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","wrapperMixin","props","_props$$padding","$padding","mob","$gap","_props$$padding2","tablet","_ref","children","_jsx","Title","h2","textSize","s","m","title","onSubmit","initialValues","Formik","Form","InputWrapper","colors","mediumGrey","lightGrey","Input","input","_templateObject2","white","label","field","useField","_jsxs","Backdrop","backdropMixin","onClose","handleKeyDown","event","key","useEffect","document","addEventListener","removeEventListener","onClick","target","currentTarget","ModalContant","lightGrey20","darkGrey","BookCard","CloseButton","button","_templateObject3","Image","img","_templateObject4","BookTitle","h3","_templateObject5","Author","p","_templateObject6","Pages","_templateObject7","Button","_templateObject8","buttonMixin","book","myLibrary","dispatch","useDispatch","navigate","useNavigate","ownBooks","useSelector","getOwnBooks","getOwnBooksAsync","type","width","height","xlinkHref","src","alt","bookTitle","author","totalPages","handleStartReading","concat","id","handleAddBook","existingBook","some","item","length","Notiflix","warning","position","addBookByIdAsync","unwrap","then","success","catch","failure","Container","xxs","StyledImage","text","dangerouslySetInnerHTML","__html","l","FilterRecommended","FilterTitle","FilterForm","actions","recommendedBooksAsync","resetForm","FilterInput","placeholder","name","innerWrapper","List","ul","ListItem","li","Number","Text","LinkWrapper","StyledLink","Link","CallToAction","DashboardTitle","to","Quote","BookInfo","modalIsOpen","setModalIsOpen","useState","closeModal","_Fragment","handleOpenModal","ModalPortal","isOpen","ModalBackdrop","ModalBookCard","BooksList","PaginateWrapper","transparentWhite","disabled","Pagination","currentPage","getCurrentPage","getTotalPages","isLoading","getIsLoading","handlePrevPage","goToPrevPage","handleNextPage","goToNextPage","RecommendedList","books","getBooks","limit","isMobile","isTablet","getBooksPerPage","useMediaQuery","maxWidth","page","PagesTitle","map","RecommendedCard","imageUrl","_id","NoResults","Recommended","Dashboard","state","getReadingBook","readingBook"],"sourceRoot":""}