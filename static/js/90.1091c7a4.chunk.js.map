{"version":3,"file":"static/js/90.1091c7a4.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Form/AuthForms/AuthButton/AuthButton.styled.jsx","components/Form/AuthForms/AuthButton/AuthButton.jsx","components/Form/AuthForms/AuthForm/AuthForm.styled.jsx","components/Form/AuthForms/AuthForm/AuthForm.jsx","components/Form/AuthForms/AuthLink/AuthLink.styled.jsx","components/Form/AuthForms/AuthLink/AuthLink.jsx","components/Form/AuthForms/CustomInput/CustomInput.styled.jsx","components/Form/AuthForms/StatusIcon/StatusIcon.styled.jsx","components/Form/AuthForms/StatusIcon/StatusIcon.jsx","components/Form/AuthForms/VisiblePasswordIcon/VisiblePasswordIcon.styled.jsx","components/Form/AuthForms/VisiblePasswordIcon/VisiblePasswordIcon.jsx","components/Form/AuthForms/CustomInput/CustomInput.jsx","components/PhoneImage/PhoneImage.styled.jsx","components/PhoneImage/PhoneImage.jsx","components/WelcomePage/WelcomePage.styled.jsx","components/GrittingTitle/GrittingTitle.styled.jsx","components/GrittingTitle/GritingTitle.jsx","components/WelcomePage/WelcomPage.jsx","helpers/form/initialValues.js","helpers/form/validationSchema.js","components/Form/AuthForms/LoginForm/LoginForm.styled.jsx","components/Form/AuthForms/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 375px;\n  padding: 20px 20px 10px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 375px) {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 32px;\n    gap: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    width: 1280px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <Box>{children}</Box>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from \"styled-components\";\nimport { colors, textSize } from \"../../../../css/variables\";\n\nexport const Button = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 30px;\n    border: 1px solid ${colors.white};\n    padding: ${(props) => props.$register ? '12px 29px' : '12px 45px'};\n    font-family: 'Gilroy-Bold';\n    font-size: ${textSize.xxs};\n    line-height: 1.28;\n    letter-spacing: 0.02em;\n    background-color: ${colors.white};\n    color: ${colors.darkGrey};\n    transition: background-color 250ms ease-in, color 250ms ease-in, border 250ms ease-in;\n\n    @media screen and (min-width: 768px) {\n        font-size: ${textSize.m};\n        line-height: 1;\n        padding: 16px 54px;\n    }\n\n    &:hover {\n        background-color: transparent;\n        color: ${colors.white};\n        border: 1px solid ${colors.transparentWhite};\n    }\n`","import PropTypes from 'prop-types';\nimport { Button } from \"./AuthButton.styled\";\n\nconst AuthButton = ({ text, ...props }) => {\n    return (\n        <Button type=\"submit\" {...props}>{text}</Button>\n   )\n}\n\nAuthButton.propTypes = {\n    text: PropTypes.string.isRequired,\n}\n\nexport default AuthButton;","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 472px;\n  }\n`;\n","import { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { StyledForm } from './AuthForm.styled';\n\nconst AuthForm = ({ initialValues, validationSchema, onSubmit, children }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <StyledForm autoComplete='off'>{children}</StyledForm>}\n    </Formik>\n  );\n};\n\nAuthForm.propTypes = {\n    initialValues: PropTypes.object.isRequired,\n    validationSchema: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default AuthForm;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { colors, textSize } from '../../../../css/variables';\n\nexport const StyledLink = styled(Link)`\n  line-height: 1.16;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  color: ${colors.lightGrey};\n  transition: color 250ms ease-in;\n\n  &:hover {\n    color: ${colors.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: ${textSize.xxs};\n    line-height: 1.28;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from \"./AuthLink.styled\";\n\nconst AuthLink = ({page, text}) => {\n    return (\n        <StyledLink to={`/${page}`}>{text}</StyledLink>\n    )\n}\n\nAuthLink.propTypes = {\n    page: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n}\n\nexport default AuthLink;","import styled from 'styled-components';\nimport { colors } from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 14px 14px;\n  border-radius: 12px;\n  background-color: ${colors.mediumGrey};\n\n  ${props =>\n    props.$error &&\n    `\n    border: 1px solid ${colors.red};\n   `}\n\n  ${props =>\n    props.$valid &&\n    `\n    border: 1px solid ${colors.green};\n   `}\n\n   label {\n    margin-right: 10px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    color: ${colors.lightGrey};\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 16px;\n  }\n`;\n\nexport const Input = styled.input`\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  width: 100%;\n\n  &::placeholder {\n    color: ${colors.white};\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ErrorMessage = styled.p`\n  font-size: 10px;\n  color: ${colors.red};\n  padding-top: 4px;\n  padding-left: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: inherit;\n    padding-top: 8px;\n  }\n`;\n\nexport const ValidMessage = styled.p`\n  font-size: 10px;\n  color: ${colors.green};\n  padding-top: 4px;\n  padding-left: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: inherit;\n    padding-top: 8px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Svg } from './StatusIcon.styled';\n\nconst StatusIcon = ({ isError, isValid }) => {\n  return (\n    <>\n      {isError && (\n        <Svg>\n          <use xlinkHref=\"./svg/svgSprite.svg#icon-error\"></use>\n        </Svg>\n      )}\n      {isValid && (\n        <Svg>\n          <use xlinkHref=\"./svg/svgSprite.svg#icon-done\"></use>\n        </Svg>\n      )}\n    </>\n  );\n};\n\nStatusIcon.propTypes = {\n  isError: PropTypes.bool,\n  isValid: PropTypes.bool,\n};\n\nexport default StatusIcon;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n`;\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Button, Svg } from \"./VisiblePasswordIcon.styled\";\n\nconst VisiblePasswordIcon = ({ visiblePassword, onClick }) => {\n    return (\n    <Button type='button' onClick={onClick}>\n        {visiblePassword ? (\n            <Svg>\n                <use xlinkHref=\"./svg/svgSprite.svg#icon-eye\"></use>\n              </Svg>\n            ) : (\n              <Svg>\n                <use xlinkHref=\"./svg/svgSprite.svg#icon-eye-off\"></use>\n              </Svg>\n       )}\n        </Button>\n    )\n}\n\nVisiblePasswordIcon.propTypes = {\n    visiblePassword: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default VisiblePasswordIcon;","import { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorMessage,\n  IconWrapper,\n  Input,\n  InputWrapper,\n  ValidMessage,\n} from './CustomInput.styled';\nimport { useState } from 'react';\nimport StatusIcon from '../StatusIcon/StatusIcon';\nimport VisiblePasswordIcon from '../VisiblePasswordIcon/VisiblePasswordIcon';\n\nconst CustomInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const [visiblePassword, setVisiblePassword] = useState(false);\n\n  const isError = meta.error && meta.touched;\n  const isValid = !!(!meta.error && meta.value.trim());\n  const isPasswordInput = field.name === 'password';\n\n  const togglePasswordVisibility = () => {\n    setVisiblePassword(!visiblePassword);\n  };\n\n  return (\n    <>\n      <div>\n      <InputWrapper $error={isError} $valid={isValid}>\n        <label>{label}</label>\n        <Input\n          {...field}\n          {...props}\n          type={\n            isPasswordInput\n              ? visiblePassword\n                ? 'text'\n                : 'password'\n              : props.type\n          }\n            autoComplete='off'\n        />\n        <IconWrapper>\n          {isPasswordInput && (\n            <VisiblePasswordIcon\n              visiblePassword={visiblePassword}\n              onClick={togglePasswordVisibility}\n            />\n          )}\n          <StatusIcon isError={isError} isValid={isValid} />\n        </IconWrapper>\n      </InputWrapper>\n      {isError && <ErrorMessage>{meta.error}</ErrorMessage>}\n      {isValid && isPasswordInput && (\n        <ValidMessage>Password is secure</ValidMessage>\n        )}\n        </div>\n    </>\n  );\n};\n\nCustomInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default CustomInput;\n","import styled from 'styled-components';\nimport { wrapperMixin } from '../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  justify-content: center;\n  padding: 20px 40px 0;\n\n  @media screen and (min-width: 1440px) {\n    padding: 80px 97px 0;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    display: none;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 255px;\n  height: auto;\n\n  @media screen and (min-width: 1440px) {\n    width: 405px;\n  }\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport {Image, Wrapper} from './PhoneImage.styled';\nimport mobileImage from '../../assets/images/iPhoneMobile.png';\nimport desktopImage from '../../assets/images/iPhoneDesktop.png';\n\nconst PhoneImage = () => {\n    const isMobile = useMediaQuery({ maxWidth: 767 })\n    \n    return (\n        <Wrapper>\n            <Image\n                src={isMobile ? mobileImage : desktopImage}\n                alt='iPhone image'\n                loading='lazy'\n            />\n        </Wrapper>\n    )\n}\n\nexport default PhoneImage;","import styled from 'styled-components';\nimport { wrapperMixin } from '../../css/variables';\n\nexport const Wrapper = styled.div`\n  ${wrapperMixin}\n  flex-direction: column;\n  padding: 20px 20px 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 64px 214px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 40px 64px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { colors } from \"../../css/variables\";\n\nexport const Title = styled.h1`\n    font-family: 'Gilroy-Bold';\n    font-size: 32px;\n    line-height: 1;\n    letter-spacing: 0.02em;\n    margin-top: 40px;\n    margin-bottom: 20px;\n\n    span {\n        color: ${colors.lightGrey50};\n    }\n\n    @media screen and (min-width: 768px) {\n        margin-top: 157px;\n    margin-bottom: 40px;\n        font-size: 64px;\n        line-height: 0.9;\n        width: 444px;\n    }\n\n    @media screen and (min-width: 1440px) {\n         margin-top: 107px;\n    }\n`","import { Title } from \"./GrittingTitle.styled\";\n\nconst GrittingTitle = () => {\n    return (\n        <Title>Expand your mind, reading <span>a book</span></Title>\n    )\n}\n\nexport default GrittingTitle;","import { Wrapper } from './WelcomePage.styled';\nimport PropTypes from 'prop-types';\nimport Logo from '../Logo/Logo';\nimport GrittingTitle from '../GrittingTitle/GritingTitle';\n// import RegisterForm from '../Form/RegisterForm/RegisterForm';\n\nconst WelcomPage = ({children}) => {\n  return (\n    \n      <Wrapper>\n        <Logo $hide />\n        <GrittingTitle />\n        {children}\n      </Wrapper>\n    \n  );\n};\n\nWelcomPage.propTypes = {\n    children: PropTypes.node\n}\n\nexport default WelcomPage;\n","export const initialRegisterValues = {\n    name: '',\n    email: '',\n    password: '',\n}\n\nexport const initialLoginValues = {\n    email: '',\n    password: '',\n}\n\nexport const initialFilterValues = {\n    title: '',\n    author: '',\n    page: null,\n}","import {object, string} from 'yup';\n\nexport const validationRegisterSchema = object().shape({\n    name: string().required('Name is requared'),\n    email: string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email format').required('Email is required'),\n    password: string().min(7, 'Password must be at least 7 characters long').required('Password is required'),\n})\n\nexport const validationLoginSchema = object().shape({\n    email: string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email format').required('Email is required'),\n    password: string().min(7, 'Password must be at least 7 characters long').required('Password is required'),\n})\n","import styled from 'styled-components';\nimport {\n  authButtonWrapperMixin,\n  inputWrapperMixin,\n} from '../../../../css/variables';\n\nexport const InputWrapper = styled.div`\n  ${inputWrapperMixin}\n  margin-bottom: 72px;\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n    margin-bottom: 146px;\n  }\n`;\n\nexport const AuthButtonsWrapper = styled.div`\n  ${authButtonWrapperMixin}\n`;\n","import CustomInput from '../CustomInput/CustomInput';\nimport { validationLoginSchema } from '../../../../helpers/form/validationSchema';\nimport { initialLoginValues } from '../../../../helpers/form/initialValues';\nimport AuthLink from '../AuthLink/AuthLink';\nimport { AuthButtonsWrapper, InputWrapper } from './LoginForm.styled';\nimport AuthButton from '../AuthButton/AuthButton';\nimport AuthForm from '../AuthForm/AuthForm';\nimport { useDispatch } from 'react-redux';\nimport { loginAsync } from '../../../../redux/auth/authOperations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, actions) => {\n    dispatch(loginAsync(values));\n    actions.resetForm();\n  };\n\n  return (\n    <AuthForm\n      initialValues={initialLoginValues}\n      validationSchema={validationLoginSchema}\n      onSubmit={onSubmit}\n    >\n      <InputWrapper>\n        <CustomInput\n          label=\"Email:\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Your@email.com\"\n        />\n        <CustomInput\n          label=\"Password:\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Yourpasswordhere\"\n        />\n      </InputWrapper>\n      <AuthButtonsWrapper>\n        <AuthButton type=\"submit\" text=\"Log in\" />\n        <AuthLink page=\"register\" text=\"Don’t have an account? \" />\n      </AuthButtonsWrapper>\n    </AuthForm>\n  );\n};\n\nexport default LoginForm;\n","import PhoneImage from '../components/PhoneImage/PhoneImage';\nimport Container from '../components/Container/Container';\nimport WelcomPage from '../components/WelcomePage/WelcomPage';\nimport LoginForm from '../components/Form/AuthForms/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <Container>\n      <WelcomPage>\n        <LoginForm />\n      </WelcomPage>\n      <PhoneImage />\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["Box","styled","div","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","Button","button","colors","white","props","$register","textSize","xxs","darkGrey","m","transparentWhite","text","type","StyledForm","Form","initialValues","validationSchema","onSubmit","Formik","autoComplete","StyledLink","Link","lightGrey","page","to","concat","InputWrapper","mediumGrey","$error","red","$valid","green","Input","input","_templateObject2","IconWrapper","_templateObject3","ErrorMessage","p","_templateObject4","ValidMessage","_templateObject5","Svg","svg","isError","isValid","_jsxs","_Fragment","xlinkHref","visiblePassword","onClick","label","field","meta","useField","setVisiblePassword","useState","error","touched","value","trim","isPasswordInput","name","VisiblePasswordIcon","togglePasswordVisibility","StatusIcon","Wrapper","wrapperMixin","Image","img","PhoneImage","isMobile","useMediaQuery","maxWidth","src","mobileImage","desktopImage","alt","loading","Title","h1","lightGrey50","GrittingTitle","Logo","$hide","initialRegisterValues","email","password","initialLoginValues","validationRegisterSchema","object","shape","string","required","matches","min","validationLoginSchema","inputWrapperMixin","AuthButtonsWrapper","authButtonWrapperMixin","LoginForm","dispatch","useDispatch","AuthForm","values","actions","loginAsync","resetForm","CustomInput","placeholder","AuthButton","AuthLink","Login","Container","WelcomPage"],"sourceRoot":""}